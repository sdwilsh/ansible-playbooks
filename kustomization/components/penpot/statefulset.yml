---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: penpot-statefulset
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: penpot
  serviceName: penpot-svc
  template:
    metadata:
      labels:
        app.kubernetes.io/name: penpot
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: PENPOT_ASSET_STORAGE_BACKEND
              value: assets-fs
            - name: PENPOT_DATABASE_URI
              value: postgresql://penpot-database-16-pg/penpot?sslmode=require
            - name: PENPOT_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: penpot-owner-user.penpot-database-16-pg.credentials.postgresql.acid.zalan.do
                  key: password
            - name: PENPOT_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: penpot-owner-user.penpot-database-16-pg.credentials.postgresql.acid.zalan.do
                  key: username
            - name: PENPOT_HTTP_SERVER_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: PENPOT_REDIS_URI
              value: redis://penpot-redis/
            - name: PENPOT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: penpot-secret
                  key: secret_key
            - name: PENPOT_STORAGE_ASSETS_FS_DIRECTORY
              value: /opt/data/assets
          image: penpotapp/backend
          name: penpot-backend
          resources:
            limits:
              cpu: 2000m
              memory: 2Gi
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /tmp
              name: backend-tmp
            - mountPath: /opt/data/assets
              name: penpot-assets
        - env:
            - name: PENPOT_REDIS_URI
              value: redis://penpot-redis/
          image: penpotapp/exporter
          name: penpot-exporter
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /tmp
              name: exporter-tmp
        - env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: PENPOT_BACKEND_URI
              value: http://$(POD_IP):6060
            - name: PENPOT_EXPORTER_URI
              value: http://$(POD_IP):6061
          image: penpotapp/frontend
          livenessProbe:
            httpGet:
              path: /readyz
              port: web
              scheme: HTTP
            initialDelaySeconds: 30
          name: penpot-frontend
          ports:
            - containerPort: 8080
              name: web
          readinessProbe:
            httpGet:
              path: /readyz
              port: web
              scheme: HTTP
            initialDelaySeconds: 30
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 50m
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /opt/data/assets
              name: penpot-assets
      priorityClassName: application
      volumes:
        - name: backend-tmp
          emptyDir: {}
        - name: exporter-tmp
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: penpot-assets
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: longhorn-encrypted
