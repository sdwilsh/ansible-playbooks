---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bind9-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: bind9
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bind9
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - bind9
              topologyKey: kubernetes.io/hostname
      containers:
        - image: ubuntu/bind9
          name: bind9
          ports:
            - containerPort: 53
              protocol: TCP
            - containerPort: 53
              protocol: UDP
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /var/cache/bind
              name: cache
            - mountPath: /etc/bind/named.conf
              name: named-conf
              subPath: etc_named.conf
      initContainers:
        - command:
            - /bin/sh
            - -c
            - /scripts/setup_var_cache_bind.sh
          image: ubuntu
          name: copy-zones
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /var/cache/bind
              name: cache
            - mountPath: /scripts
              name: scripts
            - mountPath: /zones
              name: zones
      priorityClassName: system-cluster-critical
      securityContext:
        fsGroup: 101 # bind
      volumes:
        - emptyDir: {}
          name: cache
        - configMap:
            name: hogs-bind9-etc-named-conf-configmap
          name: named-conf
        - configMap:
            defaultMode: 0777
            name: scripts-configmap
          name: scripts
        - configMap:
            name: hogs-bind9-gen-zones-configmap
          name: zones
