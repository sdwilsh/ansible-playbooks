---
cronjob:
  cronjob:
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      runAsUser: 82 # www-data
      runAsGroup: 101 # nginx
      runAsNonRoot: true
      readOnlyRootFilesystem: true
  enabled: true
  type: cronjob

externalDatabase:
  enabled: true
  existingSecret:
    enabled: true
    usernameKey: username
    passwordKey: password
    secretName: nextcloud-owner-user.nextcloud-17-pg.credentials.postgresql.acid.zalan.do
  host: nextcloud-17-pg
  type: postgresql

externalRedis:
  enabled: true
  existingSecret:
    enabled: true
    passwordKey: redis-password
    secretName: nextcloud-secret
  host: nextcloud-redis

image:
  flavor: fpm-alpine

internalDatabase:
  enabled: false

lifecycle:
  postStartCommand:
    - /bin/sh
    - -c
    - |-
      echo "Configuring NextCloud Apps"
      php occ app:enable user_oidc
      php occ config:app:set --value=0 user_oidc allow_multiple_user_backends
      php occ user_oidc:provider auth.tswn.us --clientid="${OIDC_CLIENT_ID}" --clientsecret="${OIDC_CLIENT_SECRET}" --discoveryuri="${OIDC_DISCOVERY_URI}"
nextcloud:
  configs:
    custom.config.php: |
      <?php
        $CONFIG = array(
          'check_data_directory_permissions' => false,
          'default_phone_region' => 'US',
          'default_timezone' => 'America/Los_Angeles',
          'maintenance_window_start' => 8,
          'overwritehost' => 'nextcloud.tswn.us',
          'overwriteprotocol' => 'https',
          'overwrite.cli.url' => 'https://nextcloud.tswn.us',
          'tempdirectory' => '/var/www/tmp',
        );
    oidc.config.php: |
      <?php
      $CONFIG = array(
        'user_oidc' => [
          'auto_provision' => true,
          'soft_auto_provision' => true,
          'single_logout' => false,
        ],
      );
  containerPort: 8080
  defaultConfigs:
    .htaccess: false
    apache-pretty-urls.config.php: false
    s3.config.php: false
    swift.config.php: false
    imaginary.config.php: false
  existingSecret:
    enabled: true
    passwordKey: nextcloud-admin-password
    secretName: nextcloud-secret
    smtpHostKey: ""
    smtpPasswordKey: ""
    smtpUsernameKey: ""
    usernameKey: nextcloud-admin-username
  extraEnv:
    - name: APACHE_DISABLE_REWRITE_IP
      value: "1"
    - name: OIDC_DISCOVERY_URI
      value: https://auth.tswn.us/.well-known/openid-configuration
    - name: OIDC_CLIENT_ID
      value: fr7~9UoZ_cXqdcUpB_MgysiYMuVZqJW3PLxgdlHnWUq2q05KaV3I.RGXyVP0WMomxDruQO1o
    - name: OIDC_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          key: oidc-client-secret
          name: nextcloud-secret
    - name: TRUSTED_PROXIES
      value: 127.0.0.1 172.16.0.0/16
  extraInitContainers:
    # See https://github.com/nextcloud/helm/issues/187#issuecomment-2674561977
    - name: create-redis-session-ini
      image: busybox
      command:
        - sh
        - -c
        - touch /mnt/redis-session.ini
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        runAsNonRoot: true
        runAsUser: 65534
      volumeMounts:
        - name: redis-session-fix
          mountPath: /mnt
    - command:
        - sh
        - -c
        - until pg_isready; do echo "waiting for database ${PGHOST}..."; sleep 10; done;
      env:
        - name: PGDATABASE
          value: nextcloud
        - name: PGHOST
          value: nextcloud-17-pg
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: nextcloud-owner-user.nextcloud-17-pg.credentials.postgresql.acid.zalan.do
        - name: PGSSLMODE
          value: require
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              key: username
              name: nextcloud-owner-user.nextcloud-17-pg.credentials.postgresql.acid.zalan.do
      image: postgres
      name: wait-for-nextcloud-pg-is-ready
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
  extraVolumes:
    - name: redis-session-fix
      emptyDir: {}
  extraVolumeMounts:
    - name: redis-session-fix
      mountPath: /usr/local/etc/php/conf.d/redis-session.ini
      subPath: redis-session.ini
  host: nextcloud.tswn.us
  podSecurityContext:
    fsGroup: 82 # www-data
    seccompProfile:
      type: RuntimeDefault
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    runAsUser: 82 # www-data
    runAsGroup: 82 # www-data
    runAsNonRoot: true
    readOnlyRootFilesystem: false
  trustedDomains:
    - nextcloud.tswn.us

nginx:
  containerPort: 8080
  enabled: true
  image:
    repository: nginxinc/nginx-unprivileged
    tag: alpine
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    runAsUser: 101 # nginx
    runAsGroup: 101 # nginx
    runAsNonRoot: true
    readOnlyRootFilesystem: false

persistence:
  enabled: true
  nextcloudData:
    enabled: true
    size: 100Gi
    storageClass: longhorn-encrypted
  storageClass: longhorn-encrypted

startupProbe:
  enabled: true
