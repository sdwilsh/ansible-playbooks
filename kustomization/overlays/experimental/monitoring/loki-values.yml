---
global:
  extraArgs: &extraArgs
    - -config.expand-env=true
  extraEnv: &tracing-exraEnv
    - name: JAEGER_AGENT_TAGS
      value: cluster="kairos_prod",namespace="monitoring"
    - name: JAEGER_ENDPOINT
      value: http://meta-monitoring-alloy.meta-monitoring.svc.cluster.local:14268/api/traces
    - name: JAEGER_SAMPLER_PARAM
      value: "1.0"
    - name: JAEGER_SAMPLER_TYPE
      value: ratelimiting
  extraEnvFrom: &s3-extraEnvFrom
    - secretRef:
        name: loki-env-secret
loki:
  auth_enabled: false
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    seccompProfile:
      type: RuntimeDefault
  ingester:
    chunk_encoding: snappy
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 672h # 28 days retention
  pattern_ingester:
      enabled: true
  querier:
    max_concurrent: 4
  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  storage:
    bucketNames:
      chunks: chunks
      ruler: ruler
      admin: admin
    s3:
      s3: s3://monitoring-loki:${MINIO_SECRET_ACCESS_KEY}@minio.monitoring.svc.cluster.local/chunks
      s3ForcePathStyle: true
      disable_dualstack: true
      insecure: true
    type: s3
  tracing:
    enabled: true

memcached:
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    seccompProfile:
      type: RuntimeDefault

memcachedExporter:
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    seccompProfile:
      type: RuntimeDefault

# General settings for Distributed deployment mode.
deploymentMode: Distributed
ingester:
  extraArgs: *extraArgs
  extraEnv: *tracing-exraEnv
  # This should not be needed once https://github.com/grafana/loki/pull/12652 lands!
  extraEnvFrom: *s3-extraEnvFrom
  priorityClassName: application-infra
  replicas: 3
querier:
  extraArgs: *extraArgs
  extraEnv: *tracing-exraEnv
  # This should not be needed once https://github.com/grafana/loki/pull/12652 lands!
  extraEnvFrom: *s3-extraEnvFrom
  maxUnavailable: 2
  priorityClassName: application-infra
  replicas: 3 # Improve query performance via parallelism
queryFrontend:
  extraArgs: *extraArgs
  extraEnv: *tracing-exraEnv
  # This should not be needed once https://github.com/grafana/loki/pull/12652 lands!
  extraEnvFrom: *s3-extraEnvFrom
  maxUnavailable: 1
  priorityClassName: application-infra
  replicas: 2
queryScheduler:
  extraArgs: *extraArgs
  extraEnv: *tracing-exraEnv
  # This should not be needed once https://github.com/grafana/loki/pull/12652 lands!
  extraEnvFrom: *s3-extraEnvFrom
  priorityClassName: application-infra
  replicas: 2
distributor:
  extraArgs: *extraArgs
  extraEnv: *tracing-exraEnv
  # This should not be needed once https://github.com/grafana/loki/pull/12652 lands!
  extraEnvFrom: *s3-extraEnvFrom
  maxUnavailable: 2
  priorityClassName: application-infra
  replicas: 3 
  serviceAnnotations:
    kube-vip.io/loadbalancerIPs: 10.11.1.72
compactor:
  extraArgs: *extraArgs
  # This should not be needed once https://github.com/grafana/loki/pull/12652 lands!
  extraEnvFrom: *s3-extraEnvFrom
  priorityClassName: application-infra
  replicas: 1
indexGateway:
  extraArgs: *extraArgs
  extraEnv: *tracing-exraEnv
  # This should not be needed once https://github.com/grafana/loki/pull/12652 lands!
  extraEnvFrom: *s3-extraEnvFrom
  maxUnavailable: 1
  priorityClassName: application-infra
  replicas: 2
ruler:
  extraArgs: *extraArgs
  extraEnv: *tracing-exraEnv
  # This should not be needed once https://github.com/grafana/loki/pull/12652 lands!
  extraEnvFrom: *s3-extraEnvFrom
  maxUnavailable: 1
  priorityClassName: application-infra
  replicas: 2

# Zero-out replics for non-Distributed pieces per documentation.
bloomPlanner:
  replicas: 0
bloomBuilder:
  replicas: 0
bloomGateway:
  replicas: 0
backend:
   replicas: 0
read:
   replicas: 0
write:
   replicas: 0
singleBinary:
   replicas: 0

# No need to have a special gateway; we can just use ingress
gateway:
  enabled: false

ingress:
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  enabled: true
  hosts:
    - loki.hogs.tswn.us

# These are used by helm to make sure it's working, but that's not needed with kustomize.
lokiCanary:
  enabled: false
test:
  enabled: false

