---
- hosts: vyos
  gather_facts: false
  tasks:
    - name: "Gather Config"
      vyos.vyos.vyos_facts:
        gather_subset: "config"
      tags:
        - always

    #
    # System
    #
    - name: "Set hostname"
      vyos.vyos.vyos_system:
        host_name: "{{ inventory_hostname }}"
        state: "present"
    - name: "Set nameservers"
      vyos.vyos.vyos_system:
        name_servers: "{{ vyos_system__name_servers }}"
      tags:
        - "dns"
    - name: Set Timezone
      vyos.vyos.vyos_config:
        lines:
          - set system time-zone US/Pacific
        save: true
      tags:
        - time
    - name: Set NTP servers
      vyos.vyos.vyos_ntp_global:
        config:
          servers:
            - server: "{{ common__ntp_pool }}"
              options:
                - pool
        state: replaced
      tags:
        - time

    #
    # Interfaces
    #
    - name: "Set interface information"
      ansible.builtin.import_role:
        name: "vyos-interfaces"
      tags:
        - "interfaces"

    #
    # Firewall
    #
    - name: "Set global firewall settings"
      vyos.vyos.vyos_firewall_global:
        config:
          config_trap: no
          group: "{{ vyos_firewall_global__group | default({}) }}"
          log_martians: yes
          ping:
            all: yes
            broadcast: no
          route_redirects:
            - afi: ipv4
              icmp_redirects:
                receive: no
                send: yes
              ip_src_route: no
            - afi: ipv6
              icmp_redirects:
                receive: no
                send: yes
              ip_src_route: no
          syn_cookies: yes
          twa_hazards_protection: yes
          validation: disable
        state: replaced
      tags:
        - "firewall"
        - "firewall-rules"

    - name: "Set the firewall rules"
      ansible.builtin.import_role:
        name: "vyos-firewall"
      tags:
        - firewall

    #
    # Static Routes
    #
    - name: Setup static routes
      vyos.vyos.vyos_static_routes:
        config: "{{ vyos_static_routes__config }}"
        state: merged
      when: vyos_static_routes__config | length > 0
      tags:
        - routing

    #
    # OSPF
    #
    - name: "Setup OSPF for IPv4"
      vyos.vyos.vyos_ospfv2:
        config:
          areas: "{{ vyos_ospfv2__areas }}"
          auto_cost:
            reference_bandwidth: "10000" # 10G
          log_adjacency_changes: "detail"
          neighbor: "{{ vyos_ospfv2__neighbors }}"
          parameters:
            abr_type: "cisco"
            router_id: "{{ vyos_ospfv2_parameters__router_id }}"
          redistribute:
            - route_type: "connected"
        state: "{% if vyos_ospf_interfaces__config | length > 0 %}replaced{% else %}deleted{% endif%}"
      tags:
        - "ospf"

    - name: "Setup OSPF Interfaces"
      vyos.vyos.vyos_ospf_interfaces:
        config: "{{ vyos_ospf_interfaces__config }}"
        state: "replaced"
      tags:
        - "ospf"
      when: vyos_ospf_interfaces__config | length > 0

    #
    # VRRP
    #
    - name: Setup VRRP
      ansible.builtin.import_role:
        name: vyos-vrrp
      tags:
        - vrrp

    #
    # Services
    #
    - name: Setup SSH
      vyos.vyos.vyos_config:
        lines:
          - set service ssh port 22
          - "set service ssh listen-address {{ vyos__ssh_address_ipv4 }}"
          - set service ssh disable-password-authentication
          - set system login user ansible full-name 'ansible'
          - "set system login user ansible authentication public-keys 'sdwilsh-dev' key '{{ common__ansible_key }}'"
          - "set system login user ansible authentication public-keys 'sdwilsh-dev' type '{{ common__ansible_key_type }}'"
        save: yes
      tags:
        - services
        - ssh

    - name: Setup DHCP Servers
      ansible.builtin.import_role:
        name: vyos-dhcp-server
      tags:
        - dhcp-server
        - services
      when: vyos_dhcp_server__networks | length > 0

    - name: Setup DNS Forwarding
      ansible.builtin.import_role:
        name: vyos-dns-forwarding
      tags:
        - dns
        - services

#
# vyos_cloud
#

- hosts: vyos_cloud
  gather_facts: false
  tasks:
    - name: Setup Outbound OSPF Redistribution
      vyos.vyos.vyos_config:
        lines:
          - set policy access-list 150 description 'Outbound OSPF Redistribution'
          - set policy access-list 150 rule 10 action 'permit'
          - set policy access-list 150 rule 10 destination any
          - set policy access-list 150 rule 10 source inverse-mask '0.0.0.255'
          - set policy access-list 150 rule 10 source network '10.82.0.0'
          - set policy access-list 150 rule 1000 action 'deny'
          - set policy access-list 150 rule 1000 destination any
          - set policy access-list 150 rule 1000 source any
          - set protocols ospf access-list 150 export 'connected'
        save: yes
      tags:
        - ospf

    - name: Setup default cloud gateway route
      vyos.vyos.vyos_config:
        lines:
          - "set protocols static table 10 route 0.0.0.0/0 next-hop {{ nexthop }}"
          - set policy route CLOUD rule 10 set table 10
          # TODO(#4): This is temporary until home router moves onto the transit stack
          - set protocols static table 10 route 10.1.0.0/24 next-hop 10.10.0.1
          - set protocols static table 10 route 10.117.0.0/23 next-hop 10.10.0.1
      vars:
        nexthop: >-
          {{ hostvars['tartarus01.tswn.us'].vyos_interfaces__wireguard |
              selectattr('description', 'eq', inventory_hostname + ' wg0') |
              map(attribute='ipv4') |
              first |
              map(attribute='address') |
              first |
              ansible.utils.ipaddr('address') }}
      tags:
        - routing
    - name: Setup interfaces to use cloud gateway route
      vyos.vyos.vyos_config:
        lines:
          - "set interfaces {{ item }} policy route 'CLOUD'"
        save: yes
      loop:
        - ethernet eth1 vif 82
      tags:
        - routing

#
# vyos_home
#

- hosts: vyos_home
  gather_facts: false
  tasks:
    - name: "Setup Outbound OSPF Redistribution"
      vyos.vyos.vyos_config:
        lines:
          - "set policy access-list 150 description 'Outbound OSPF Redistribution'"
          - "set policy access-list 150 rule 10 action 'permit'"
          - "set policy access-list 150 rule 10 destination any"
          - "set policy access-list 150 rule 10 source inverse-mask '0.0.1.255'"
          - "set policy access-list 150 rule 10 source network '10.117.0.0'"
          - "set policy access-list 150 rule 20 action 'permit'"
          - "set policy access-list 150 rule 20 destination any"
          - "set policy access-list 150 rule 20 source inverse-mask '0.0.0.255'"
          - "set policy access-list 150 rule 20 source network '10.10.0.0'"
          - "set policy access-list 150 rule 1000 action 'deny'"
          - "set policy access-list 150 rule 1000 destination any"
          - "set policy access-list 150 rule 1000 source any"
          - "set protocols ospf access-list 150 export 'connected'"
        save: yes
      tags:
        - "ospf"

    - name: "Setup WAN load-balancing"
      vyos.vyos.vyos_config:
        lines:
          - "set protocols static interface-route 0.0.0.0/0 next-hop-interface pppoe0 distance 10"
      tags:
        - "routing"

    #
    # NAT
    #
    - set_fact:
        lan_interfaces_with_wan_access:
          # UNIFI-MAN
          - interface: "{{ vyos__lan_interface }}"
            ipv4_network: "10.1.0.0/24"
          # MAN
          - interface: "{{ vyos__lan_interface }}.10"
            ipv4_network: "10.10.0.0/24"
          # IOT
          - interface: "{{ vyos__lan_interface }}.66"
            ipv4_network: "10.66.0.0/24"
          # HOME
          - interface: "{{ vyos__lan_interface }}.117"
            ipv4_network: "10.117.0.0/23"
          - interface: "wg0"
            ipv4_network: "10.117.2.0/24"
      tags:
        - always
    - name: "Setup NAT masquerade rules"
      vyos.vyos.vyos_config:
        lines:
          - "set nat source rule {{ (rule_number + 1) * 10 }} outbound-interface pppoe0"
          - "set nat source rule {{ (rule_number + 1) * 10 }} source address {{ item.ipv4_network }}"
          - "set nat source rule {{ (rule_number + 1) * 10 }} translation address masquerade"
      loop: "{{ lan_interfaces_with_wan_access }}"
      loop_control:
        index_var: rule_number
      tags:
        - nat
    - name: "Setup port forwarding rules"
      vyos.vyos.vyos_config:
        lines:
          - "set nat destination rule {{ (rule_number + 1) * 10 }} description '{{ item.description }} ({{ ansible_managed }})'"
          - "set nat destination rule {{ (rule_number + 1) * 10 }} destination port '{{ item.port }}'"
          - "set nat destination rule {{ (rule_number + 1) * 10 }} inbound-interface pppoe0"
          - "set nat destination rule {{ (rule_number + 1) * 10 }} protocol '{{ item.protocol }}'"
          - "set nat destination rule {{ (rule_number + 1) * 10 }} translation address '{{ item.translation_address }}'"
      loop:
        - description: "factorio-server"
          port: "34197"
          protocol: "udp"
          translation_address: "10.117.0.30"
        - description: "valheim-server"
          port: "2456-2458"
          protocol: "udp"
          translation_address: "10.117.0.30"
        - description: "unifi-gui"
          port: "8443"
          protocol: "tcp"
          translation_address: "10.82.0.2"
        - description: "unifi-inform"
          port: "8080"
          protocol: "tcp"
          translation_address: "10.82.0.2"
        - description: "unifi-ssh"
          port: "4222"
          protocol: "tcp"
          translation_address: "10.82.0.2"
        - description: "unifi-stun"
          port: "3478"
          protocol: "udp"
          translation_address: "10.82.0.2"
      loop_control:
        index_var: rule_number
      tags:
        - nat

    #
    # Services
    #
    - name: "Setup UBNT DHCP global-parameters"
      vyos.vyos.vyos_config:
        lines:
          - "set service dhcp-server global-parameters 'option space ubnt;'"
          - "set service dhcp-server global-parameters 'option ubnt.unifi-address code 1 = ip-address;'"
          - "set service dhcp-server global-parameters 'class &quot;ubnt&quot; { match if substring (option vendor-class-identifier, 0, 4) = &quot;ubnt&quot;; option vendor-class-identifier &quot;ubnt&quot;; vendor-option-space ubnt; }'"
          - "set service dhcp-server shared-network-name UNIFI-MAN subnet 10.1.0.0/24 subnet-parameters 'option ubnt.unifi-address 10.82.0.2;'"
        save: yes
      tags:
        - services
        - dhcp-server

    - name: "Setup dynamic dns"
      vyos.vyos.vyos_config:
        lines:
          - "set service dns dynamic interface pppoe0 service dyndns host-name {{ item.hostname }}"
          - "set service dns dynamic interface pppoe0 service dyndns login {{ item.hostname }}"
          - "set service dns dynamic interface pppoe0 service dyndns password {{ item.password }}"
          - "set service dns dynamic interface pppoe0 service dyndns server dyn.dns.he.net"
        save: yes
      loop: "{{ vyos__dynamic_dns_hosts }}"
      no_log: yes
      tags:
        - services
        - dynamic-dns

    - name: "Setup snmp"
      vyos.vyos.vyos_config:
        lines:
          - "set service snmp listen-address 10.10.0.{{ vyos__host_id_ipv4 }}"
          - "set service snmp listen-address fd36:3eb3:43b0:a::{{ vyos__host_id_ipv6 }}"
          - "set service snmp trap-target 10.10.0.19 port 1162"
          - "set service snmp community hogs authorization ro"
          - "set service snmp community hogs client 10.10.0.18"
        save: yes
      tags:
        - "services"
        - "snmp"

#
# vyos_remote
#

- hosts: "vyos_remote"
  gather_facts: false
  tasks:
    - name: "Setup Outbound OSPF Redistribution"
      vyos.vyos.vyos_config:
        lines:
          - "set policy access-list 150 description 'Outbound OSPF Redistribution'"
          - "set policy access-list 150 rule 10 action 'permit'"
          - "set policy access-list 150 rule 10 destination any"
          - "set policy access-list 150 rule 10 source inverse-mask '0.0.0.255'"
          - "set policy access-list 150 rule 10 source network '10.117.2.0'"
          - "set policy access-list 150 rule 1000 action 'deny'"
          - "set policy access-list 150 rule 1000 destination any"
          - "set policy access-list 150 rule 1000 source any"
          - "set protocols ospf access-list 150 export 'connected'"
        save: yes
      tags:
        - "ospf"

    - name: "Setup default VPN route"
      vyos.vyos.vyos_config:
        lines:
          - "set protocols static table 10 route 0.0.0.0/0 next-hop 10.117.0.1"
          - "set policy route VPN rule 10 set table 10"
          - "set interfaces wireguard wg2 policy route 'VPN'"
        save: yes
      tags:
        - "routing"

    - name: Setup NAT masquerade rules
      vyos.vyos.vyos_config:
        lines:
          - "set nat source rule {{ (rule_number + 1) * 10 }} outbound-interface eth0"
          - "set nat source rule {{ (rule_number + 1) * 10 }} source address {{ item }}"
          - "set nat source rule {{ (rule_number + 1) * 10 }} translation address masquerade"
      loop:
        - 10.82.0.0/24
      loop_control:
        index_var: rule_number
      tags:
        - nat
    - name: Setup NAT port forwarding rules
      vyos.vyos.vyos_config:
        lines:
          - "set nat destination rule {{ (rule_number + 1) * 10 }} description '{{ item.description }}'"
          - "set nat destination rule {{ (rule_number + 1) * 10 }} destination port '{{ item.port }}'"
          - "set nat destination rule {{ (rule_number + 1) * 10 }} inbound-interface eth0"
          - "set nat destination rule {{ (rule_number + 1) * 10 }} protocol '{{ item.protocol }}'"
          - "set nat destination rule {{ (rule_number + 1) * 10 }} translation address '{{ item.translation_address }}'"
      loop:
        - description: unifi-inform
          port: 8080
          protocol: tcp
          translation_address: 10.82.0.2
        - description: unifi-stun
          port: 3478
          protocol: udp
          translation_address: 10.82.0.2
      loop_control:
        index_var: rule_number
      tags:
        - nat

#
# vyos_wan
#

- hosts: vyos_wan
  gather_facts: false
  tasks:
    - name: Setup default route
      vyos.vyos.vyos_config:
        lines:
          - "set protocols static interface-route 0.0.0.0/0 next-hop-interface {{ vyos_wan__outbound_interface }}"
      tags:
        - routing

    - name: Setup NAT masquerade rules
      vyos.vyos.vyos_config:
        lines:
          - "set nat source rule {{ (rule_number + 1) * 10 }} outbound-interface {{ vyos_wan__outbound_interface }}"
          - "set nat source rule {{ (rule_number + 1) * 10 }} source address {{ item }}"
          - "set nat source rule {{ (rule_number + 1) * 10 }} translation address masquerade"
      loop:
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
      loop_control:
        index_var: rule_number
      tags:
        - nat


