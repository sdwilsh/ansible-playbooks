{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "configMigration": true,
  "customManagers": [
    {
      "customType": "regex",
      "fileMatch": [
        "^.devcontainer/devcontainer.json$"
      ],
      "matchStrings": [
        "\\srenovate:\\s+datasource=(?<datasource>.*?)\\sdepName=(?<depName>.*?)\\n\\s*\"version\":\\s+\"(?<currentValue>.*?)\""
      ]
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^Earthfile$"
      ],
      "matchStrings": [
        "#\\s*renovate:\\s*datasource=(?<datasource>.*?)\\s+depName=(?<depName>.*?)(\\s+versioning=(?<versioning>.*?))?\\s+ARG\\s+.+_VERSION=(?<currentValue>.*?)\\s"
      ],
      "versioningTemplate": "{{#if versioning}}{{versioning}}{{else}}semver{{/if}}"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^earthly\\.sh$"
      ],
      "datasourceTemplate": "docker",
      "depNameTemplate": "earthly/earthly",
      "matchStrings": [
        "earthly\\/earthly:(?<currentValue>.*?)\\s"
      ],
      "versioningTemplate": "semver-coerced"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^kustomization\\/.*\\.sh$"
      ],
      "matchStrings": [
        "\\srenovate:\\s+datasource=(?<datasource>.*?)\\sdepName=(?<depName>.*?)\\n\\s*[a-zA-Z_]+=\"(?<currentValue>.*?)\""
      ]
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^roles/.+/tasks/.+\\.yml$"
      ],
      "datasourceTemplate": "docker",
      "matchStrings": [
        "#\\s*renovate:(\\s*versioning=(?<versioning>.*?))?\\n\\s*image:\\s*(?<depName>.*?):(?<currentValue>.*?)\\s"
      ],
      "versioningTemplate": "{{#if versioning}}{{versioning}}{{else}}semver{{/if}}"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^plays/kairos/upgrade\\.yml$"
      ],
      "datasourceTemplate": "docker",
      "matchStrings": [
        "#\\s*renovate:\\sdepName=(?<depName>.*?)\\n\\s+kairos_version: \"(?<currentValue>.*?)\""
      ]
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^group_vars/vyos\\.yml$",
        "^roles/devsetup/tasks/main\\.yml$"
      ],
      "matchStrings": [
        "#\\s+renovate:\\s+datasource=(?<datasource>.*?)\\s+depName=(?<depName>.*?)\\s+[a-z]+_version:\\s+(?<currentValue>.*?)\\n"
      ]
    },
    {
      "customType": "regex",
      "datasourceTemplate": "docker",
      "fileMatch": [
        "^kustomization/.+/.+/.*values\\.yml$"
      ],
      "matchStrings": [
        "image:\\n\\s+repository:\\s+(?<depName>.*?)\\n\\s+tag:\\s+(?<currentValue>.*?)\\n",
        "'#\\srenovate:\\sdatasource=(?<datasource>.*?)\\sdepName=(?<depName>.*?)\\n\\s+tag:\\s(?<currentValue>.*?)\\n"
      ],
      "versioningTemplate": "docker"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^kustomization/.+/.+/kustomization\\.yml$",
        "^kustomization/.+/.+/.+/kustomization\\.yml$"
      ],
      "matchStrings": [
        "#\\s*renovate:\\sdatasource=(?<datasource>.*?)\\sdepName=(?<depName>.*?)(?:\\sversioning=(?<versioning>.*?))?\\n\\s+newTag: (?<currentValue>.*?)\\n",
        "#\\s*renovate:\\sdatasource=(?<datasource>.*?)\\n\\s+- https://raw\\.githubusercontent\\.com/(?<depName>.*?)/(?<currentValue>v[0-9]+\\.[0-9]+\\.[0-9]+)",
        "#\\s*renovate:\\sdatasource=(?<datasource>.*?)(?:\\sversioning=(?<versioning>.*?))?\\n\\s+- https://github\\.com/(?<depName>.*?)/releases/download/(?<currentValue>.*?)/",
        "#\\s*renovate:\\sdatasource=(?<datasource>.*?)\\n\\s+- https://github\\.com/(?<depName>.*?)/raw/(?<currentValue>.*?)/"
      ],
      "versioningTemplate": "{{#if versioning}}{{versioning}}{{else}}semver-coerced{{/if}}"
    },
    {
      "customType": "regex",
      "datasourceTemplate": "docker",
      "fileMatch": [
        "^kustomization/components/.+/postgresql\\.yml$",
        "^kustomization/overlays/.+/.+/postgresql\\.yml$"
      ],
      "matchStrings": [
        "image:\\s+(?<depName>.*?):(?<currentValue>.*?)\\n"
      ],
      "versioningTemplate": "docker"
    },
    {
      "customType": "regex",
      "datasourceTemplate": "github-releases",
      "depNameTemplate": "prometheus/prometheus",
      "fileMatch": [
        "^kustomization/components/.+/prometheus\\.yml$",
        "^kustomization/overlays/.+/.+/prometheus\\.yml$"
      ],
      "matchStrings": [
        "version:\\s+(?<currentValue>v.*?)\\n"
      ]
    }
  ],
  "extends": [
    "config:best-practices"
  ],
  "packageRules": [
    {
      "description": "Automatic Minor and Patch Updates",
      "automerge": true,
      "automergeType": "branch",
      "matchUpdateTypes": [
        "minor",
        "patch"
      ],
      "matchPackageNames": [
        "alpine",
        "argoproj/argo-cd",
        "cert-manager/cert-manager",
        "deluan/navidrome",
        "earthly/earthly",
        "eclipse-mosquitto",
        "esphome/esphome",
        "ghcr.io/paperless-ngx/paperless-ngx",
        "gotenberg/gotenberg",
        "helm/helm",
        "jellyfin/jellyfin",
        "lscr.io/linuxserver/transmission",
        "mbround18/valheim",
        "prometheus/prometheus",
        "shenxn/protonmail-bridge",
        "traefik/traefik",
        "ubuntu/bind9",
        "zwavejs/zwave-js-ui"
      ],
      "minimumReleaseAge": "3 days"
    },
    {
      "description": "Automatic Digest Updates",
      "automerge": true,
      "automergeType": "branch",
      "matchPackageNames": [
        "ghcr.io/blakeblackshear/frigate",
        "ghcr.io/servercontainers/samba"
      ],
      "matchUpdateTypes": [
        "digest"
      ]
    },
    {
      "description": "Group for all traefik updates",
      "groupName": "traefik",
      "matchPackageNames": [
        "traefik/traefik",
        "traefik"
      ]
    },
    {
      "description": "Group for all immich updates",
      "groupName": "immich-app",
      "matchPackageNames": [
        "ghcr.io/immich-app/immich-machine-learning",
        "ghcr.io/immich-app/immich-server",
        "immich"
      ]
    },
    {
      "matchPackageNames": [
        "quay.io/kairos/kairos-ubuntu-22-lts"
      ],
      "versioning": "regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-k3sv\\d+\\.\\d+\\.\\d+\\+k3s\\d+$"
    },
    {
      "groupName": "mariadb-operator",
      "matchFileNames": [
        "kustomization/components/mariadb-operator/kustomization.yml"
      ],
      "minimumReleaseAge": "1 week"
    },
    {
      "groupName": "multus",
      "matchFileNames": [
        "kustomization/components/multus/kustomization.yml"
      ],
      "minimumReleaseAge": "1 month"
    },
    {
      "groupName": "penpot",
      "matchPackageNames": [
        "penpotapp/**"
      ]
    },
    {
      "groupName": "redis",
      "matchPackageNames": [
        "quay.io/opstree/redis",
        "quay.io/opstree/redis-sentinel",
        "redis-operator"
      ]
    },
    {
      "groupName": "tdarr",
      "matchPackageNames": [
        "/^ghcr\\.io\\/haveagitgat\\/tdarr.*/"
      ]
    },
    {
      "description": "Group for all vector updates",
      "groupName": "vector",
      "matchPackageNames": [
        "**vector"
      ]
    },
    {
      "description": "Run vyos updates once a week",
      "groupName": "vyos",
      "matchPackageNames": [
        "vyos"
      ],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)-rolling-(?<patch>\\d+)$",
      "schedule": [
        "after 4pm on friday"
      ]
    }
  ],
  "separateMinorPatch": true,
  "timezone": "America/Los_Angeles"
}
