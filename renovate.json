{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "configMigration": true,
  "customManagers": [
    {
      "customType": "regex",
      "fileMatch": [
        "(^|/|\\.)Dockerfile$"
      ],
      "matchStrings": [
        "#\\s*renovate:\\s*datasource=(?<datasource>.*?)\\s+depName=(?<depName>.*?)(\\s+versioning=(?<versioning>.*?))?\\s+ARG\\s+.+_VERSION=(?<currentValue>.*?)\\s"
      ],
      "versioningTemplate": "{{#if versioning}}{{versioning}}{{else}}semver{{/if}}"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^kustomization\\/.*\\.sh$"
      ],
      "matchStrings": [
        "\\srenovate:\\s+datasource=(?<datasource>.*?)\\sdepName=(?<depName>.*?)\\n\\s*[a-zA-Z_]+=\"(?<currentValue>.*?)\""
      ]
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^roles/.+/tasks/.+\\.yml$"
      ],
      "datasourceTemplate": "docker",
      "matchStrings": [
        "#\\s*renovate:(\\s*versioning=(?<versioning>.*?))?\\n\\s*image:\\s*(?<depName>.*?):(?<currentValue>.*?)\\s"
      ],
      "versioningTemplate": "{{#if versioning}}{{versioning}}{{else}}semver{{/if}}"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^plays/kairos/upgrade\\.yml$"
      ],
      "datasourceTemplate": "docker",
      "matchStrings": [
        "#\\s*renovate:\\sdepName=(?<depName>.*?)\\n\\s+kairos_version: \"(?<currentValue>.*?)\""
      ]
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^group_vars/vyos\\.yml$"
      ],
      "matchStrings": [
        "#\\s+renovate:\\s+datasource=(?<datasource>.*?)\\s+depName=(?<depName>.*?)\\s+[a-z]+_version:\\s+(?<currentValue>.*?)\\n"
      ]
    },
    {
      "customType": "regex",
      "datasourceTemplate": "docker",
      "fileMatch": [
        "^kustomization/.+/.+/.*values\\.yml$"
      ],
      "matchStrings": [
        "image:\\n\\s+repository:\\s+(?<depName>.*?)\\n\\s+tag:\\s+(?<currentValue>.*?)\\n",
        "'#\\srenovate:\\sdatasource=(?<datasource>.*?)\\sdepName=(?<depName>.*?)\\n\\s+tag:\\s(?<currentValue>.*?)\\n"
      ],
      "versioningTemplate": "docker"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^kustomization/.+/.+/kustomization\\.yml$",
        "^kustomization/.+/.+/.+/kustomization\\.yml$"
      ],
      "matchStrings": [
        "#\\s*renovate:\\sdatasource=(?<datasource>.*?)\\sdepName=(?<depName>.*?)(?:\\sversioning=(?<versioning>.*?))?\\n\\s+newTag: (?<currentValue>.*?)\\n",
        "#\\s*renovate:\\sdatasource=(?<datasource>.*?)\\n\\s+- https://raw\\.githubusercontent\\.com/(?<depName>.*?)/(?<currentValue>v[0-9]+\\.[0-9]+\\.[0-9]+)",
        "#\\s*renovate:\\sdatasource=(?<datasource>.*?)(?:\\sversioning=(?<versioning>.*?))?\\n\\s+- https://github\\.com/(?<depName>.*?)/releases/download/(?<currentValue>.*?)/",
        "#\\s*renovate:\\sdatasource=(?<datasource>.*?)\\n\\s+- https://github\\.com/(?<depName>.*?)/raw/(?<currentValue>.*?)/",
        "#\\s*renovate:\\sdatasource=(?<datasource>.+?)(?:\\sversioning=(?<versioning>.+?))?\\n\\s+- https://github\\.com/(?<depName>.+/.+?)/?\\?ref=(?<currentValue>.+?)$"
      ],
      "versioningTemplate": "{{#if versioning}}{{versioning}}{{else}}semver-coerced{{/if}}"
    },
    {
      "customType": "regex",
      "datasourceTemplate": "docker",
      "fileMatch": [
        "^kustomization/components/.+/postgresql(?:/.+?)?\\.yml$",
        "^kustomization/components/.+/tenant(?:/.+?)?\\.yml$",
        "^kustomization/overlays/.+/.+/postgresql(?:/.+?)?\\.yml$",
        "^kustomization/overlays/.+/.+/tenant(?:/.+?)?\\.yml$"
      ],
      "matchStrings": [
        "image:\\s+(?<depName>.+?):(?<currentValue>.+?)(?:@sha256:(?<currentDigest>[0-9a-f]+))?$"
      ],
      "versioningTemplate": "docker"
    },
    {
      "customType": "regex",
      "datasourceTemplate": "github-releases",
      "fileMatch": [
        "^kustomization/overlays/prod/traefik/configmap/traefik/static\\.yml$"
      ],
      "matchStrings": [
        "moduleName:\\s+github\\.com/(?<depName>.*/.*)\\n\\s+version:\\s+(?<currentValue>.*)"
      ]
    },
    {
      "customType": "regex",
      "datasourceTemplate": "github-releases",
      "depNameTemplate": "prometheus/prometheus",
      "fileMatch": [
        "^kustomization/components/.+/prometheus\\.yml$",
        "^kustomization/overlays/.+/.+/prometheus\\.yml$"
      ],
      "matchStrings": [
        "version:\\s+(?<currentValue>v.*?)\\n"
      ]
    }
  ],
  "extends": [
    "config:best-practices",
    "github>marinatedconcrete/config//renovate/devcontainer#renovate-config-2.0.0",
    "github>marinatedconcrete/config//renovate/marinatedconcrete#renovate-config-2.0.0"
  ],
  "packageRules": [
    {
      "description": "Automatic Minor and Patch Updates",
      "automerge": true,
      "automergeType": "branch",
      "matchUpdateTypes": [
        "minor",
        "patch"
      ],
      "matchPackageNames": [
        "alloy",
        "alpine",
        "argoproj/argo-cd",
        "cert-manager/cert-manager",
        "deluan/navidrome",
        "docker.io/grafana/alloy",
        "eclipse-mosquitto",
        "esphome/esphome",
        "ghcr.io/paperless-ngx/paperless-ngx",
        "gotenberg/gotenberg",
        "helm/helm",
        "jellyfin/jellyfin",
        "loki",
        "lscr.io/linuxserver/transmission",
        "mbround18/valheim",
        "prometheus/prometheus",
        "quay.io/minio/minio",
        "shenxn/protonmail-bridge",
        "ubuntu/bind9",
        "zwavejs/zwave-js-ui"
      ],
      "minimumReleaseAge": "3 days",
      "schedule": [
        "after 4pm on friday",
        "every weekend"
      ]
    },
    {
      "description": "Automatic Patch Updates",
      "automerge": true,
      "automergeType": "branch",
      "matchUpdateTypes": [
        "patch"
      ],
      "matchPackageNames": [
        "ghcr.io/home-assistant/home-assistant",
        "ghcr.io/immich-app/immich-machine-learning",
        "ghcr.io/immich-app/immich-server",
        "immich",
        "zwavejs/zwave-js-ui"
      ],
      "minimumReleaseAge": "1 days",
      "schedule": [
        "after 4pm every weekday",
        "every weekend"
      ]
    },
    {
      "description": "Automatic Digest Updates",
      "automerge": true,
      "automergeType": "branch",
      "matchPackageNames": [
        "busybox",
        "ghcr.io/blakeblackshear/frigate",
        "ghcr.io/servercontainers/samba",
        "lscr.io/linuxserver/code-server",
        "postgres",
        "quay.io/minio/minio"
      ],
      "matchUpdateTypes": [
        "digest"
      ],
      "minimumReleaseAge": "3 days",
      "schedule": [
        "after 4pm every weekday"
      ]
    },
    {
      "automerge": true,
      "automergeType": "branch",
      "description": "Group for all just automergeable updates",
      "groupName": "just-automerge",
      "matchPackageNames": [
        "casey/just"
      ],
      "matchUpdateTypes": [
        "digest",
        "major",
        "minor",
        "patch"
      ],
      "schedule": [
        "after 4pm on friday"
      ]
    },
    {
      "automerge": true,
      "automergeType": "branch",
      "description": "Group for all traefik automergeable updates",
      "groupName": "traefik-automerge",
      "matchPackageNames": [
        "traefik/traefik",
        "traefik"
      ],
      "matchUpdateTypes": [
        "digest",
        "minor",
        "patch"
      ],
      "schedule": [
        "after 4pm on friday"
      ]
    },
    {
      "description": "Group for all major traefik updates",
      "groupName": "traefik",
      "matchPackageNames": [
        "traefik/traefik",
        "traefik"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "schedule": [
        "after 4pm on friday"
      ]
    },
    {
      "description": "Group for all immich updates",
      "groupName": "immich-app",
      "matchPackageNames": [
        "ghcr.io/immich-app/immich-machine-learning",
        "ghcr.io/immich-app/immich-server",
        "immich"
      ]
    },
    {
      "matchPackageNames": [
        "quay.io/kairos/kairos-ubuntu-22-lts"
      ],
      "versioning": "regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-k3sv\\d+\\.\\d+\\.\\d+\\+k3s\\d+$"
    },
    {
      "automerge": true,
      "automergeType": "branch",
      "groupName": "penpot",
      "matchPackageNames": [
        "penpotapp/**"
      ],
      "matchUpdateTypes": [
        "digest",
        "minor",
        "patch"
      ],
      "minimumReleaseAge": "7 days",
      "schedule": [
        "after 4pm every weekday"
      ]
    },
    {
      "automerge": true,
      "automergeType": "branch",
      "groupName": "redis",
      "matchPackageNames": [
        "quay.io/opstree/redis",
        "quay.io/opstree/redis-sentinel",
        "redis-operator"
      ],
      "matchUpdateTypes": [
        "digest",
        "minor",
        "patch"
      ],
      "schedule": [
        "after 4pm on friday"
      ]
    },
    {
      "automerge": true,
      "automergeType": "branch",
      "groupName": "renovate",
      "matchPackageNames": [
        "renovatebot/renovate"
      ],
      "schedule": [
        "after 4pm on friday"
      ]
    },
    {
      "groupName": "tdarr",
      "matchPackageNames": [
        "/^ghcr\\.io\\/haveagitgat\\/tdarr.*/"
      ]
    },
    {
      "description": "Run vyos updates once a week",
      "groupName": "vyos",
      "matchPackageNames": [
        "vyos/vyos-nightly-build"
      ],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)-rolling-(?<patch>\\d+)$",
      "schedule": [
        "after 4pm on friday"
      ]
    }
  ],
  "separateMinorPatch": true,
  "timezone": "America/Los_Angeles"
}
