---
- name: Create base unix groups
  group:
    name: "{{ item.name }}"
    gid: "{{ item.gid }}"
    state: present
  become: yes
  loop: "{{ common__unix_groups }}"
- name: "Create base users"
  ansible.builtin.user:
    group: "{{ item.name }}"
    home: "/home/{{ item.name }}"
    name: "{{ item.name }}"
    shell: "/bin/bash"
    state: present
    uid: "{{ item.uid }}"
  become: yes
  loop: "{{ common__unix_users }}"
  when: ansible_distribution != "FreeBSD"
- name: Create base users (FreeBSD)
  user:
    group: "{{ item.name }}"
    home: "/home/{{ item.name }}"
    name: "{{ item.name }}"
    shell: "/usr/local/bin/bash"
    state: present
    uid: "{{ item.uid }}"
  loop: "{{ common__unix_users }}"
  when: ansible_distribution == "FreeBSD"
- name: Deploy ansible user's public key
  authorized_key:
    user: ansible
    state: present
    key: "{{ common__ansible_key_type }} {{ common__ansible_key }}"
- name: Setup sudoers
  template:
    src: sudoers.j2
    dest: "{{ common__etc_dir + '/sudoers.d/ansible' }}"
    validate: 'visudo -cf %s'
    mode: 0440
  become: yes

- include: facts.yml

# Networking
- name: "Set /etc/hosts"
  ansible.builtin.template:
    src: "hosts.j2"
    dest: "/etc/hosts"

# Platform-specific stuff
- include: freebsd.yml
  when: ansible_distribution == "FreeBSD"
- include: ubuntu.yml
  when: ansible_distribution == "Ubuntu"

# Zabbix Agent
- include: "zabbix-agent/main.yml"

# Cleanup From Provisioning
- name: Remove provision user
  user:
    name: provision
    state: absent
  when: ansible_user == "provision"
- name: Remove provision group
  group:
    name: provision
    state: absent
  when: ansible_user == "provision"
