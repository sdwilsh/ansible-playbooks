---
# tasks file for ara-docker
- name: "Create ara group"
  ansible.builtin.group:
    name: "ara"
    state: "present"
- name: "Create ara user"
  ansible.builtin.user:
    name: "ara"
    group: "ara"
    groups:
      - "docker"
      - "ara"
    state: "present"
    shell: "/bin/bash"

- ansible.builtin.set_fact:
    ara_ip_address: 10.10.0.17
    db_user:
      name: ara
      password: !vault |
            $ANSIBLE_VAULT;1.1;AES256
            63653535666539373364333935613261373338313862353563653662383137386138316530653736
            3433656433633738396362666665373762326663313533350a616333633136333330396364653662
            38316537613764373862323135346664613833306664343632633836323131306562623637366261
            3962383331346139630a376264393633393936613934303533316162393239393334366632623838
            32373133333937646432306664393434313438613330393764346338636632666135386632336637
            6634393531303931613664653939633933363031643365666665
      priv:
        ara.*: ALL
  no_log: yes
  tags:
    - always

- name: Setup database
  community.mysql.mysql_db:
    name: ara
    state: present
    login_password: "{{ hostvars['mariadb01.hogs.tswn.us'].mariadb_mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_user: root
  delegate_to: mariadb01.hogs.tswn.us
  tags:
    - mariadb
  when:
    # Only run interactively; not part of ansible-cron
    - lookup('ansible.builtin.env', 'ARA_API_SERVER') == ''
- name: Setup database users
  no_log: yes
  community.mysql.mysql_user:
    name: "{{ db_user.name }}"
    host: "{{ ara_ip_address }}"
    password: "{{ db_user.password }}"
    priv: "{{ db_user.priv }}"
    login_password: "{{ hostvars['mariadb01.hogs.tswn.us'].mariadb_mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_user: root
    state: present
  delegate_to: mariadb01.hogs.tswn.us
  tags:
    - mariadb
  when:
    # Only run interactively; not part of ansible-cron
    - lookup('ansible.builtin.env', 'ARA_API_SERVER') == ''

- name: "Create ara directory"
  ansible.builtin.file:
    path: "/opt/ara"
    state: "directory"
    owner: "ara"
    group: "ara"
    mode: "u=rwx"
- name: "Create ara config file"
  ansible.builtin.copy:
    content: "{{ ara_config | to_nice_yaml(indent=2, explicit_start=True) }}"
    dest: "/opt/ara/settings.yaml"
    owner: "ara"
    group: "ara"
    mode: "u=rw"
  no_log: yes
  vars:
    ara_config:
      default:
        ALLOWED_HOSTS:
          - "ara.hogs.tswn.us"
        BASE_DIR: "/opt/ara"
        CORS_ORIGIN_WHITELIST:
          - "http://ara.hogs.tswn.us"
        DATABASE_CONN_MAX_AGE: 28800
        DATABASE_ENGINE: django.db.backends.mysql
        DATABASE_NAME: ara
        DATABASE_USER: "{{ db_user.name }}"
        DATABASE_PASSWORD: "{{ db_user.password }}"
        DATABASE_HOST: mariadb.hogs.tswn.us
        DEBUG: False
        EXTERNAL_AUTH: False
        LOGGING:
          disable_existing_loggers: false
          formatters:
            normal:
                format: "%(asctime)s %(levelname)s %(name)s: %(message)s"
          handlers:
            console:
                class: "logging.StreamHandler"
                formatter: "normal"
                level: "INFO"
                stream: "ext://sys.stdout"
          loggers:
            ara:
                handlers:
                  - "console"
                level: "INFO"
                propagate: 0
          root:
            handlers:
              - "console"
            level: "INFO"
          version: 1
        LOG_LEVEL: "INFO"
        PAGE_SIZE: 100
        READ_LOGIN_REQUIRED: False
        SECRET_KEY: "{{ ara_docker__secret_key }}"
        TIME_ZONE: "America/Los_Angeles"
        WRITE_LOGIN_REQUIRED: False
  register: ara_config

- name: "Launch ara API server container"
  community.docker.docker_compose:
    project_name: "ara"
    definition:
      version: "3"
      services:
        api_server:
          dns:
            - 10.10.0.1
          environment:
            ARA_SETTINGS: /opt/ara/settings.yaml
          image: quay.io/recordsansible/ara-api:latest
          mac_address: 02:42:0a:75:00:26
          networks:
            man:
              ipv4_address: "{{ ara_ip_address }}"
          ports:
            - 8000:8000/tcp
          volumes:
            - /opt/ara:/opt/ara
      networks:
        man:
          external:
            name: man
    pull: yes
    restarted: "{{ ara_config.changed | bool }}"
  vars:
    ansible_python_interpreter: "/usr/bin/env python3-docker"
  register: status
- ansible.builtin.assert:
    that:
      - "status.services.api_server.ara_api_server_1.state.running"

- name: "Setup cleanup cron job"
  ansible.builtin.cron:
    name: "Prune ara playbook storage"
    job: "if ! out=`{{ cron_command }}`; then echo $out; fi"
    user: "ansible"
    minute: "10" # Run every hour at ten-past the hour.
    state: present
  vars:
    cron_command: "/home/ansible/.local/bin/ara playbook prune --days 30 --confirm 2>&1"
