---
# tasks file for factorio
- name: Create factorio group
  ansible.builtin.group:
    name: factorio
    state: present
- name: Create factorio user
  ansible.builtin.user:
    name: factorio
    group: factorio
    groups:
      - docker
      - factorio
      - srcs
    state: present
    shell: /bin/bash

- name: Create factorio directory
  ansible.builtin.file:
    path: /opt/factorio
    state: directory
    owner: factorio
    group: factorio
    mode: 0750
- name: Create factorio config directory
  ansible.builtin.file:
    path: /opt/factorio/config
    state: directory
    owner: factorio
    group: factorio
    mode: 0750
- name: Create server-settings.json
  ansible.builtin.template:
    src: server-settings.j2
    dest: /opt/factorio/config/server-settings.json
    owner: factorio
    group: factorio
    mode: 0640
  register: server_settings
- name: Create factorio mods directory
  ansible.builtin.file:
    path: /opt/factorio/mods
    state: directory
    owner: factorio
    group: factorio
    mode: "u=rwx,g=rwx,o=rw"
- name: Create mod-list.json
  ansible.builtin.template:
    src: mod-list.j2
    dest: /opt/factorio/mods/mod-list.json
    owner: factorio
    group: factorio
    mode: 0444
  register: mod_list

- name: Get factorio user info
  ansible.builtin.getent:
    database: passwd
    key: factorio
- name: Storing factorio UID and GID
  ansible.builtin.set_fact:
    factorio_uid: "{{ getent_passwd[\"factorio\"].1 }}"
    factorio_gid: "{{ getent_passwd[\"factorio\"].2 }}"
- name: Launch factorio container
  community.docker.docker_compose:
    project_name: factorio
    definition:
      version: "2"
      services:
        factorio:
          environment:
            - "PUID={{ factorio_uid }}"
            - "PGID={{ factorio_gid }}"
            - "UPDATE_MODS_ON_START={{ (factorio__token != '') | to_json }}"
            - "USERNAME={{ factorio__username }}"
            - "TOKEN={{ factorio__token }}"
          image: factoriotools/factorio:stable
          ports:
            - "34197:34197/udp"
            - "27015:27015/tcp"
          volumes:
            - "/opt/factorio:/factorio"
    pull: yes
    restarted: "{{ (server_settings.changed or mod_list.changed) | bool }}"
  vars:
    ansible_python_interpreter: "/usr/bin/env python3-docker"
  register: status
- ansible.builtin.assert:
    that:
      - "status.services.factorio.factorio_factorio_1.state.running"