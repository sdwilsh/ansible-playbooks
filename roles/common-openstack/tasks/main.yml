---
# tasks file for common-openstack
- name: "Create unix groups"
  group:
    name: "{{ item.name }}"
    gid: "{{ item.gid }}"
    state: "present"
  become: yes
  loop: "{{ common_openstack__unix_groups }}"
- name: "Create base users"
  ansible.builtin.user:
    group: "{{ item.group | default(item.name) }}"
    home: "/home/{{ item.name }}"
    name: "{{ item.name }}"
    password: "{{ item.password | default('') }}"
    shell: "/bin/bash"
    state: "present"
    uid: "{{ item.uid }}"
  become: yes
  loop: "{{ common_openstack__unix_users }}"

- name: "Deploy ansible user's openstack-ansible deploy public key"
  ansible.posix.authorized_key:
    user: "root"
    state: "present"
    key: "{{ common_openstack__ansible_deploy_key_type }} {{ common_openstack__ansible_deploy_key }}"
  become: yes

- name: "Deploy backup user's public key"
  ansible.builtin.authorized_key:
    user: "backup"
    state: "present"
    key: "{{ common_openstack__backup_key_type }} {{ common_openstack__backup_key }}"
  become: yes
  tags:
    - "zfs"
- name: "Install Dependencies for ZFS"
  ansible.builtin.apt:
    name: "{{ item }}"
    state: "latest"
  become: yes
  loop:
    - "sanoid"
    - "zfsutils-linux"
  tags:
    - "zfs"
- name: "Ensure sanoid directory exists"
  ansible.builtin.file:
    group: "root"
    owner: "root"
    path: "/etc/sanoid"
    state: "directory"
  become: yes
  tags:
    - "zfs"
- name: "Set sanoid config"
  ansible.builtin.copy:
    content: |
      [openstack]
          use_template = production
          recursive = yes
      
      [template_production]
          frequently = 0
          hourly = 36
          daily = 30
          monthly = 3
          yearly = 0
          autosnap = yes
          autoprune = yes
    dest: "/etc/sanoid/sanoid.conf"
    mode: "u=r,g=r,o=r"
    owner: "root"
    group: "root"
  become: yes
  tags:
    - "zfs"

# Encrypted Volume Setup
- name: "Create ZFS key directory"
  ansible.builtin.file:
    path: "/usr/local/etc/zfs/keys/{{ pool.name }}"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "u=rx,g=rx"
  become: yes
  loop: "{{ zfs_pools }}"
  loop_control:
    label: "{{ pool.name }}"
    loop_var: "pool"
  tags:
    - "zfs"
- name: "Create volume key file"
  ansible.builtin.copy:
    content: "{{ common_openstack__zfs_volume_keys[volume.pool][volume.name].key }}"
    dest: "/usr/local/etc/zfs/keys/{{ volume.pool }}/{{ volume.name }}"
    owner: "root"
    group: "root"
    mode: "u=r,g=r"
  become: yes
  loop: "{{ zfs_volumes }}"
  loop_control:
    label: "{{ volume.name }}"
    loop_var: "volume"
  tags:
    - "zfs"
