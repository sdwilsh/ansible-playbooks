---
# tasks file for mysql-server
- name: "Install latest version of mysql-server"
  ansible.builtin.package:
    name: "mysql80-server"
    state: "present"
  notify: "Restart mysql"
- name: "Install latest version of PyMySQL"
  ansible.builtin.package:
    name: "py37-pymysql"
    state: "present"
- name: "Enable service at start"
  ansible.builtin.copy:
    content: |
      mysql_enable="YES"
      # Set the data directory to be our specifically configured ZFS directory.
      mysql_dbdir="/var/db/mysql/data"
    dest: "/etc/rc.conf.d/mysql"
    mode: "u=rw,g=r,o=r"
    owner: "root"
    group: "wheel"
- name: "Setup mysql-server config"
  ansible.builtin.copy:
    content: |
      [client]
      port                            = 3306
      socket                          = /tmp/mysql.sock

      [mysql]
      prompt                          = \u@\h [\d]>\_
      no_auto_rehash

      [mysqld]
      user                            = mysql
      port                            = 3306
      socket                          = /tmp/mysql.sock
      bind-address                    = *
      basedir                         = /usr/local
      # Set the data directory to be our specifically configured ZFS directory.
      datadir                         = /var/db/mysql/data
      log_error                       = /var/db/mysql/data/mysql.err
      tmpdir                          = /var/db/mysql_tmpdir
      slave-load-tmpdir               = /var/db/mysql_tmpdir
      secure-file-priv                = /var/db/mysql_secure
      log-bin                         = mysql-bin
      log-output                      = TABLE
      relay-log-recovery              = 1
      slow-query-log                  = 1
      server-id                       = 1
      sync_binlog                     = 1
      sync_relay_log                  = 1
      binlog_cache_size               = 16M
      default_password_lifetime       = 0
      enforce-gtid-consistency        = 1
      gtid-mode                       = ON
      safe-user-create                = 1
      lower_case_table_names          = 1
      explicit-defaults-for-timestamp = 1
      myisam-recover-options          = BACKUP,FORCE
      open_files_limit                = 32768
      table_open_cache                = 16384
      table_definition_cache          = 8192
      net_retry_count                 = 16384
      key_buffer_size                 = 256M
      max_allowed_packet              = 64M
      long_query_time                 = 0.5
      innodb_buffer_pool_size         = 1G
      # Set the logs directory to be our specifically configured ZFS directory.
      innodb_log_group_home_dir       = /var/db/mysql/logs
      innodb_data_file_path           = ibdata1:128M:autoextend
      innodb_temp_data_file_path      = ibtmp1:128M:autoextend
      innodb_flush_method             = O_DIRECT
      innodb_log_file_size            = 256M
      innodb_log_buffer_size          = 16M
      innodb_write_io_threads         = 6
      innodb_read_io_threads          = 6
      innodb_autoinc_lock_mode        = 2
      # Disble double writes because ZFS protects us already.
      innodb_doublewrite              = 0
      # Disable checksum because ZFS protects us already.
      innodb_checksum_algorithm       = none

      [mysqldump]
      max_allowed_packet              = 256M
      quote_names
      quick

      !includedir /usr/local/etc/mysql/conf.d
    dest: "/usr/local/etc/mysql/my.cnf"
    mode: "u=rw,g=r"
    owner: "root"
    group: "mysql"
  notify: "Restart mysql"
- name: "Ensure mysql-server is started"
  ansible.builtin.service:
    name: "mysql-server"
    state: "started"
- name: "Setup configured databases"
  community.mysql.mysql_db:
    collation: "{% if 'collation' in item %}{{ item.collation }}{% endif %}"
    encoding: "{% if 'encoding' in item %}{{ item.encoding }}{% endif %}"
    name: "{{ item.name }}"
    state: "present"
    login_password: "{{ mysql_server__root_password }}"
    login_unix_socket: "/tmp/mysql.sock"
    login_user: "root"
  loop: "{{ mysql_server__databases }}"
  loop_control:
    label: "{{ item.name }}"
- name: "Setup configured users"
  no_log: True
  community.mysql.mysql_user:
    name: "{{ item.0.name }}"
    host: "{{ item.1 }}"
    password: "{{ item.0.password }}"
    priv: "{{ item.0.priv }}"
    login_password: "{{ mysql_server__root_password }}"
    login_unix_socket: "/tmp/mysql.sock"
    login_user: "root"
    state: "present"
  loop: "{{ mysql_server__users | subelements('hosts') }}"
  loop_control:
    label: "{{ item.0.name }}@{{ item.1 }}"

- name: "Write out mysql information for zabbix-agent"
  ansible.builtin.copy:
    content: |
      [client]
      user='zbx_monitor'
      password='{{ hostvars['mysql.hogs.tswn.us'].mysql_server__users | selectattr('name', 'equalto', 'zbx_monitor') | map(attribute='password') | first }}'
    dest: "~zabbix/.my.cnf"
    group: "zabbix"
    mode: "u=r"
    owner: "zabbix"
  notify: "restart zabbix-agent"
  tags:
    - "zabbix-agent"
- name: "Install template for zabbix and mysql"
  ansible.builtin.copy:
    # For updates, see:
    # https://git.zabbix.com/projects/ZBX/repos/zabbix/raw/templates/db/mysql_agent/template_db_mysql.conf?at=refs%2Fheads%2Fmaster
    content: |
      UserParameter=mysql.ping[*], /usr/local/bin/mysqladmin -h"$1" -P"$2" ping
      UserParameter=mysql.get_status_variables[*], /usr/local/bin/mysql -h"$1" -P"$2" -sNX -e "show global status"
      UserParameter=mysql.version[*], /usr/local/bin/mysqladmin -s -h"$1" -P"$2" version
      UserParameter=mysql.db.discovery[*], /usr/local/bin/mysql -h"$1" -P"$2" -sN -e "show databases"
      UserParameter=mysql.dbsize[*], /usr/local/bin/mysql -h"$1" -P"$2" -sN -e "SELECT COALESCE(SUM(DATA_LENGTH + INDEX_LENGTH),0) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='$3'"
      UserParameter=mysql.replication.discovery[*], /usr/local/bin/mysql -h"$1" -P"$2" -sNX -e "show slave status"
      UserParameter=mysql.slave_status[*], /usr/local/bin/mysql -h"$1" -P"$2" -sNX -e "show slave status"
    dest: "{{ common__etc_dir }}/zabbix/zabbix_agent.d/template_db_mysql.conf"
    group: "{% if ansible_distribution == 'FreeBSD' %}wheel{% else %}root{% endif %}"
    mode: "u=rw,g=r,o=r"
    owner: "root"
  notify: "restart zabbix-agent"
  tags:
    - "zabbix-agent"
