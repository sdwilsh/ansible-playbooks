---
# tasks file for docker-unifi-controller
- name: "Create unifi group"
  ansible.builtin.group:
    name: "unifi"
    state: "present"
- name: "Create unifi user"
  ansible.builtin.user:
    name: "unifi"
    group: "unifi"
    state: "present"
    shell: "/bin/bash"

- name: "Create unifi directory"
  ansible.builtin.file:
    path: "/opt/unifi"
    state: "directory"
    owner: "unifi"
    group: "unifi"
    mode: "u=rwx,g=rx"

- name: "Get unifi user info"
  ansible.builtin.getent:
    database: "passwd"
    key: "unifi"
- name: "Storing unifi UID and GID"
  ansible.builtin.set_fact:
    unifi_uid: "{{ getent_passwd[\"unifi\"].1 }}"
    unifi_gid: "{{ getent_passwd[\"unifi\"].2 }}"

- name: "Launch unifi-controller containers"
  community.docker.docker_compose:
    project_name: "unifi"
    definition:
      services:
        controller:
          dns:
            - "10.82.0.1"
          environment:
            - "PUID={{ unifi_uid }}"
            - "PGID={{ unifi_gid }}"
            - "MEM_LIMIT=1024"
            - "MEM_STARTUP=1024"
          healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8080/"]
            interval: "15s"
            timeout: "5s"
            retries: 3
            start_period: "3m"
          image: "ghcr.io/linuxserver/unifi-controller"
          mac_address: "1e:28:50:21:e2:66"
          networks:
            service82:
              ipv4_address: "10.82.0.2"
          ports:
            - "3478:3478/udp"
            - "6789:6789/tcp"
            - "8080:8080/tcp"
            - "8443:8443/tcp"
          restart: "unless-stopped"
          volumes:
            - "/opt/unifi:/config"
      networks:
        service82:
          external:
            name: "service82"
    pull: yes
    stopped: no
  vars:
    ansible_python_interpreter: "/usr/bin/env python3-docker"
  register: status
- ansible.builtin.assert:
    that:
      - "status.services.controller.unifi_controller_1.state.running"
