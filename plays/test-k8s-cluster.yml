---
- hosts: localhost
  gather_facts: false
  tasks:
    - name: Create namespace for secret
      kubernetes.core.k8s:
        context: "{{ cluster }}"
        state: present
        resource_definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ secret.namespace }}"
      loop: "{{ secrets }}"
      loop_control:
        label: "{{ secret.namespace }}"
        loop_var: secret
    - name: Create secret
      kubernetes.core.k8s:
        apply: yes
        context: "{{ cluster }}"
        resource_definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ secret.name }}"
            namespace: "{{ secret.namespace }}"
          stringData: "{{ secret.stringData }}"
          type: Opaque
        state: present
      loop: "{{ secrets }}"
      loop_control:
        label: "{{ secret.namespace }}/{{ secret.name }}"
        loop_var: secret

    - ansible.builtin.import_tasks: k8s/cert-manager/tasks.yml
      tags:
        - cert-manager
      vars:
        certmanager_cloudflare_api_token: "{{ hostvars[groups['kairos_test'] | first].certmanager_cloudflare_api_token }}"
    - ansible.builtin.import_tasks: k8s/longhorn/tasks.yml
      tags:
        - longhorn
      vars:
        longhorn_default_crypto_passphrase: "{{ hostvars[groups['kairos_test_controlplane'] | first].longhorn_default_crypto_passphrase }}"
        longhorn_s3: "{{ hostvars[groups['kairos_test'] | first].longhorn_s3 }}"
    - ansible.builtin.import_tasks: k8s/mariadb/tasks.yml
      tags:
        - mariadb
      vars:
        mariabackup_password: "{{ hostvars[groups['kairos_test'] | first].mariabackup_password }}"
        mysql_root_password: "{{ hostvars[groups['kairos_test'] | first].mysql_root_password }}"
    - ansible.builtin.import_tasks: k8s/phpmyadmin/tasks.yml
      tags:
        - phpmyadmin
      vars:
        mysql_root_password: "{{ hostvars[groups['kairos_test'] | first].mysql_root_password }}"
  vars:
    # Right now, I only have the test cluster, but this will need to change in the future!
    cluster: default
    secrets: "{{ hostvars[groups['kairos_test'] | first].secrets }}"
