---
- name: Create a namespace for Longhorn
  kubernetes.core.k8s:
    api_version: v1
    context: "{{ cluster }}"
    kind: Namespace
    name: longhorn-system
    state: present
- name: Create Secret for the bucket target
  kubernetes.core.k8s:
    api_version: v1
    context: "{{ cluster }}"
    kind: Secret
    name: backup-target-credentials
    namespace: longhorn-system
    resource_definition:
      stringData:
        AWS_ACCESS_KEY_ID: "{{ longhorn_s3.access_key }}"
        AWS_SECRET_ACCESS_KEY: "{{ longhorn_s3.secret_key }}"
        AWS_ENDPOINTS: http://minio-svc.default.svc.cluster.local:9000
      type: Opaque
    state: present
- name: Install Longhorn via Helm
  kubernetes.core.k8s:
    api_version: helm.cattle.io/v1
    context: "{{ cluster }}"
    kind: HelmChart
    resource_definition:
      metadata:
        name: longhorn
        namespace: longhorn-system
      spec:
        chart: longhorn
        repo: https://charts.longhorn.io
        valuesContent: |-
          {{ longhorn_values }}
        version: "1.4.1"
    state: present
- name: Configure Longhorn Ingress
  kubernetes.core.k8s:
    api_version: traefik.containo.us/v1alpha1
    context: "{{ cluster }}"
    kind: IngressRoute
    resource_definition:
      metadata:
        name: longhorn-ingressroute
        namespace: longhorn-system
      spec:
        entryPoints:
          - web
        routes:
          - match: Host(`longhorn.hogs.tswn.us`)
            kind: Rule
            services:
              - name: longhorn-frontend
                port: 80
    state: present
- name: Configure global encryption key
  kubernetes.core.k8s:
    api_version: v1
    context: "{{ cluster }}"
    kind: Secret
    resource_definition:
      metadata:
        name: longhorn-default-crypto
        namespace: longhorn-system
      stringData:
        CRYPTO_KEY_VALUE: "{{ longhorn_default_crypto_passphrase }}"
        CRYPTO_KEY_PROVIDER: secret
- name: Configure Encrypted StorageClass
  kubernetes.core.k8s:
    api_version: storage.k8s.io/v1
    context: "{{ cluster }}"
    kind: StorageClass
    resource_definition:
      metadata:
        name: longhorn-crypto-global
      provisioner: driver.longhorn.io
      allowVolumeExpansion: yes
      parameters:
        numberOfReplicas: "{{ longhorn_default_replicas }}"
        staleReplicaTimeout: "2880" # 48 hours in minutes
        fromBackup: ""
        encrypted: "true"
        csi.storage.k8s.io/provisioner-secret-name: longhorn-default-crypto
        csi.storage.k8s.io/provisioner-secret-namespace: longhorn-system
        csi.storage.k8s.io/node-publish-secret-name: longhorn-default-crypto
        csi.storage.k8s.io/node-publish-secret-namespace: longhorn-system
        csi.storage.k8s.io/node-stage-secret-name: longhorn-default-crypto
        csi.storage.k8s.io/node-stage-secret-namespace: longhorn-system
      reclaimPolicy: Retain
    state: present
