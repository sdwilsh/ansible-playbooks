---
- hosts: localhost
  gather_facts: false
  tasks:
    #
    # Resource Configuration
    #
    - block:
      - name: Fetch traefik CRD definition
        ansible.builtin.get_url:
          url: https://raw.githubusercontent.com/traefik/traefik/v2.9/docs/content/reference/dynamic-configuration/kubernetes-crd-definition-v1.yml
          dest: ./kubernetes-crd.definition-v1.yml
        register: crd_definition
      - name: Apply traefik CRD definition
        kubernetes.core.k8s:
          src: "{{ crd_definition.dest }}"
          state: present

    #
    # User Setup
    #
    - name: Create ClusterRole for traefik
      kubernetes.core.k8s:
        api_version: rbac.authorization.k8s.io/v1
        context: "{{ cluster }}"
        kind: ClusterRole
        name: traefik-role
        resource_definition:
          rules:
              - apiGroups:
                  - ""
                resources:
                  - services
                  - endpoints
                  - secrets
                verbs:
                  - get
                  - list
                  - watch
              - apiGroups:
                  - extensions
                  - networking.k8s.io
                resources:
                  - ingresses
                  - ingressclasses
                verbs:
                  - get
                  - list
                  - watch
              - apiGroups:
                  - extensions
                  - networking.k8s.io
                resources:
                  - ingresses/status
                verbs:
                  - update
              - apiGroups:
                  - traefik.containo.us
                resources:
                  - middlewares
                  - middlewaretcps
                  - ingressroutes
                  - traefikservices
                  - ingressroutetcps
                  - ingressrouteudps
                  - tlsoptions
                  - tlsstores
                  - serverstransports
                verbs:
                  - get
                  - list
                  - watch
        state: present
    - name: Create ServiceAccount for traefik
      kubernetes.core.k8s:
        api_version: v1
        context: "{{ cluster }}"
        kind: ServiceAccount
        name: traefik-account
        namespace: default
        state: present
    - name: Bind ClusterRole for traefik to traefik-account
      kubernetes.core.k8s:
        api_version: rbac.authorization.k8s.io/v1
        context: "{{ cluster }}"
        kind: ClusterRoleBinding
        name: traefik-role-binding
        resource_definition:
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: traefik-role
          subjects:
            - kind: ServiceAccount
              name: traefik-account
              namespace: default
        state: present
    
    #
    # Deployment
    #
    - name: Create Service for traefik's dashboard
      kubernetes.core.k8s:
        api_version: apps/v1
        context: "{{ cluster }}"
        kind: Deployment
        name: traefik-deployment
        namespace: default
        resource_definition:
          spec:
            replicas: 1
            selector:
              matchLabels:
                app.kubernetes.io/name: traefik
            template:
              metadata:
                labels:
                  app.kubernetes.io/name: traefik
              spec:
                serviceAccountName: traefik-account
                containers:
                  - name: traefik
                    image: traefik:v2.9
                    args:
                      - --api.insecure
                      - --entryPoints.web.address=:80
                      - --providers.kubernetescrd
                    ports:
                      - name: web
                        containerPort: 80
                      - name: dashboard
                        containerPort: 8080
        state: present

    #
    # IngressClass
    #
    - name: Create IngressClass for traefik
      kubernetes.core.k8s:
        api_version: networking.k8s.io/v1
        context: "{{ cluster }}"
        kind: IngressClass
        name: traefik-lb
        resource_definition:
          metadata:
            annotations:
              ingressclass.kubernetes.io/is-default-class: "true"
            lables:
              app.kubernetes.io/component: controller
          spec:
            controller: traefik.io/ingress-controller
        state: present

    #
    # Services
    #
    - name: Create Service for traefik's dashboard
      kubernetes.core.k8s:
        api_version: v1
        context: "{{ cluster }}"
        kind: Service
        name: traefik-dashboard-service
        namespace: default
        resource_definition:
          spec:
            ports:
              - port: 8080
                targetPort: dashboard
            selector:
              app.kubernetes.io/name: traefik
            type: LoadBalancer
        state: present
    - name: Create Service for traefik's web port 
      kubernetes.core.k8s:
        api_version: v1
        context: "{{ cluster }}"
        kind: Service
        name: traefik-web-service
        namespace: default
        resource_definition:
          spec:
            ports:
              - port: 80
                targetPort: web
            selector:
              app.kubernetes.io/name: traefik
            type: LoadBalancer
        state: present
