---
- hosts: vyos
  gather_facts: false
  tasks:
    - name: "Gather Config"
      vyos.vyos.vyos_facts:
        gather_subset: "config"
      tags:
        - always

    #
    # System
    #
    - name: "Set hostname"
      vyos.vyos.vyos_system:
        host_name: "{{ inventory_hostname }}"
        state: "present"
    - name: "Set nameservers"
      vyos.vyos.vyos_system:
        name_servers: "{{ vyos_system__name_servers }}"
      tags:
        - "dns"
    - name: Set Timezone
      vyos.vyos.vyos_config:
        lines:
          - set system time-zone US/Pacific
        save: true
      tags:
        - time
    - name: Set NTP servers
      vyos.vyos.vyos_ntp_global:
        config:
          servers:
            - server: "{{ common__ntp_pool }}"
              options:
                - pool
        state: replaced
      tags:
        - time

    #
    # Interfaces
    #
    - name: "Set interface information"
      ansible.builtin.import_role:
        name: "vyos-interfaces"
      tags:
        - "interfaces"

    #
    # Firewall
    #
    - name: Set global firewall settings
      vyos.vyos.vyos_firewall_global:
        config:
          config_trap: false
          group: "{{ vyos_firewall_global__group | default({}) }}"
          log_martians: true
          ping:
            all: true
            broadcast: false
          route_redirects:
            - afi: ipv4
              icmp_redirects:
                receive: false
                send: true
              ip_src_route: false
            - afi: ipv6
              icmp_redirects:
                receive: false
                send: true
              ip_src_route: false
          syn_cookies: true
          twa_hazards_protection: true
          validation: disable
        state: replaced
      tags:
        - firewall
        - firewall-settings

    - name: "Set the firewall rules"
      ansible.builtin.import_role:
        name: "vyos-firewall"
      tags:
        - firewall
      vars:
        # Path should be relative to the play we are executing.
        vyos_firewall__zones_path: "../{{ vyos_firewall__zones_root_path }}"

    #
    # Static Routes
    #
    - name: Setup static routes
      vyos.vyos.vyos_static_routes:
        config: "{{ vyos_static_routes__config }}"
        state: merged
      when: vyos_static_routes__config | length > 0
      tags:
        - routing

    #
    # OSPF
    #
    - name: "Setup OSPF for IPv4"
      vyos.vyos.vyos_ospfv2:
        config:
          areas: "{{ vyos_ospfv2__areas }}"
          auto_cost:
            reference_bandwidth: "10000" # 10G
          log_adjacency_changes: "detail"
          neighbor: "{{ vyos_ospfv2__neighbors }}"
          parameters:
            abr_type: "cisco"
            router_id: "{{ vyos_ospfv2_parameters__router_id }}"
          redistribute:
            - route_type: "connected"
        state: "{% if vyos_ospf_interfaces__config | length > 0 %}replaced{% else %}deleted{% endif%}"
      tags:
        - "ospf"

    - name: "Setup OSPF Interfaces"
      vyos.vyos.vyos_ospf_interfaces:
        config: "{{ vyos_ospf_interfaces__config }}"
        state: "replaced"
      tags:
        - "ospf"
      when: vyos_ospf_interfaces__config | length > 0

    #
    # VRRP
    #
    - name: Setup VRRP
      ansible.builtin.import_role:
        name: vyos-vrrp
      tags:
        - vrrp

    #
    # Services
    #
    - name: Setup SSH
      vyos.vyos.vyos_config:
        lines:
          - set service ssh port 22
          - "set service ssh listen-address {{ vyos__ssh_address_ipv4 }}"
          - set service ssh disable-password-authentication
          - set system login user ansible full-name 'ansible'
        save: true
      tags:
        - services
        - ssh
    - name: Deploy public keys to ansible user
      vyos.vyos.vyos_config:
        lines:
          - "set system login user ansible authentication public-keys '{{ item.description }}' key '{{ item.key }}'"
          - "set system login user ansible authentication public-keys '{{ item.description }}' type '{{ item.type }}'"
      loop: "{{ common__keys }}"
      loop_control:
        label: "{{ item.description }}"
      tags:
        - services
        - ssh

    - name: Setup DHCP Servers
      ansible.builtin.import_role:
        name: vyos-dhcp-server
      tags:
        - dhcp-server
        - services
      when: vyos_dhcp_server__networks | length > 0

    - name: Setup DNS Forwarding
      ansible.builtin.import_role:
        name: vyos-dns-forwarding
      tags:
        - dns
        - services

#
# vyos_home
#

- hosts: vyos_home
  gather_facts: false
  tasks:
    - name: Setup Outbound OSPF Redistribution
      vyos.vyos.vyos_config:
        lines:
          - set policy access-list 150 description 'Outbound OSPF Redistribution'
          - set policy access-list 150 rule 10 action 'permit'
          - set policy access-list 150 rule 10 destination any
          - set policy access-list 150 rule 10 source inverse-mask '0.0.1.255'
          - set policy access-list 150 rule 10 source network '10.117.0.0'
          - set policy access-list 150 rule 15 action 'permit'
          - set policy access-list 150 rule 15 destination any
          - set policy access-list 150 rule 15 source inverse-mask '0.0.1.255'
          - set policy access-list 150 rule 15 source network '10.11.0.0'
          - set policy access-list 150 rule 20 action 'permit'
          - set policy access-list 150 rule 20 destination any
          - set policy access-list 150 rule 20 source inverse-mask '0.0.0.255'
          - set policy access-list 150 rule 20 source network '10.10.0.0'
          - set policy access-list 150 rule 1000 action 'deny'
          - set policy access-list 150 rule 1000 destination any
          - set policy access-list 150 rule 1000 source any
          - set protocols ospf access-list 150 export 'connected'
        save: true
      tags:
        - ospf

    - name: "Setup WAN load-balancing"
      vyos.vyos.vyos_config:
        lines:
          - "set protocols static interface-route 0.0.0.0/0 next-hop-interface pppoe0 distance 10"
      tags:
        - "routing"

    - name: Setup SERVICES route
      vyos.vyos.vyos_config:
        lines:
          - set protocols static table 11 interface-route 0.0.0.0/0 next-hop-interface wg0
          - set policy route SERVICES rule 10 destination group network-group RFC1918-v4
          - set policy route SERVICES rule 10 set table main
          - set policy route SERVICES rule 20 source group address-group OPEN-SERVICES-v4
          - set policy route SERVICES rule 20 set table 11
          - set policy route SERVICES rule 30 set table main
          - set interfaces ethernet eth1 vif 11 policy route 'SERVICES'
        save: true
      tags:
        - routing

    #
    # NAT
    #
    - set_fact:
        lan_interfaces_with_wan_access:
          # MAN
          - interface: "{{ vyos__lan_interface }}.10"
            ipv4_network: "10.10.0.0/24"
          # SERVICES
          - interface: "{{ vyos__lan_interface }}.11"
            ipv4_network: "10.11.0.0/23"
          # IOT
          - interface: "{{ vyos__lan_interface }}.66"
            ipv4_network: "10.66.0.0/24"
          # HOME
          - interface: "{{ vyos__lan_interface }}.117"
            ipv4_network: "10.117.0.0/23"
          - interface: "wg0"
            ipv4_network: "10.117.2.0/24"
      tags:
        - always
    - name: "Setup NAT masquerade rules"
      vyos.vyos.vyos_config:
        lines:
          - "set nat source rule {{ (rule_number + 1) * 10 }} outbound-interface pppoe0"
          - "set nat source rule {{ (rule_number + 1) * 10 }} source address {{ item.ipv4_network }}"
          - "set nat source rule {{ (rule_number + 1) * 10 }} translation address masquerade"
      loop: "{{ lan_interfaces_with_wan_access }}"
      loop_control:
        index_var: rule_number
      tags:
        - nat

    #
    # Services
    #
    - name: "Setup UBNT DHCP global-parameters"
      vyos.vyos.vyos_config:
        lines:
          - "set service dhcp-server global-parameters 'option space ubnt;'"
          - "set service dhcp-server global-parameters 'option ubnt.unifi-address code 1 = ip-address;'"
          - "set service dhcp-server global-parameters 'class &quot;ubnt&quot; { match if substring (option vendor-class-identifier, 0, 4) = &quot;ubnt&quot;; option vendor-class-identifier &quot;ubnt&quot;; vendor-option-space ubnt; }'"
          - "set service dhcp-server shared-network-name MAN subnet 10.10.0.0/24 subnet-parameters 'option ubnt.unifi-address 10.11.1.65;'"
        save: true
      tags:
        - services
        - dhcp-server

    - name: "Setup snmp"
      vyos.vyos.vyos_config:
        lines:
          - "set service snmp listen-address 10.10.0.{{ vyos__host_id_ipv4 }}"
          - "set service snmp listen-address fd36:3eb3:43b0:a::{{ vyos__host_id_ipv6 }}"
          - "set service snmp trap-target 10.10.0.19 port 1162"
          - "set service snmp community hogs authorization ro"
          - "set service snmp community hogs client 10.10.0.18"
        save: true
      tags:
        - "services"
        - "snmp"

#
# vyos_remote
#

- hosts: "vyos_remote"
  gather_facts: false
  tasks:
    - name: "Setup Outbound OSPF Redistribution"
      vyos.vyos.vyos_config:
        lines:
          - "set policy access-list 150 description 'Outbound OSPF Redistribution'"
          - "set policy access-list 150 rule 10 action 'permit'"
          - "set policy access-list 150 rule 10 destination any"
          - "set policy access-list 150 rule 10 source inverse-mask '0.0.0.255'"
          - "set policy access-list 150 rule 10 source network '10.117.2.0'"
          - "set policy access-list 150 rule 1000 action 'deny'"
          - "set policy access-list 150 rule 1000 destination any"
          - "set policy access-list 150 rule 1000 source any"
          - "set protocols ospf access-list 150 export 'connected'"
        save: true
      tags:
        - "ospf"

    - name: "Setup default VPN route"
      vyos.vyos.vyos_config:
        lines:
          - "set protocols static table 10 route 0.0.0.0/0 next-hop 10.117.0.1"
          - "set policy route VPN rule 10 set table 10"
          - "set interfaces wireguard wg2 policy route 'VPN'"
        save: true
      tags:
        - "routing"

    - name: Setup NAT masquerade rules
      vyos.vyos.vyos_config:
        lines:
          - "set nat source rule {{ (rule_number + 1) * 10 }} outbound-interface eth0"
          - "set nat source rule {{ (rule_number + 1) * 10 }} source address {{ item }}"
          - "set nat source rule {{ (rule_number + 1) * 10 }} translation address masquerade"
        save: true
      loop:
        - 10.11.0.0/23
      loop_control:
        index_var: rule_number
      tags:
        - nat
    - name: Setup NAT port forwarding rules
      vyos.vyos.vyos_config:
        lines:
          - "set nat destination rule {{ (rule_number + 1) * 10 }} description '{{ item.description }}'"
          - "set nat destination rule {{ (rule_number + 1) * 10 }} destination port '{{ item.port }}'"
          - "set nat destination rule {{ (rule_number + 1) * 10 }} inbound-interface eth0"
          - "set nat destination rule {{ (rule_number + 1) * 10 }} protocol '{{ item.protocol }}'"
          - "set nat destination rule {{ (rule_number + 1) * 10 }} translation address '{{ item.translation_address }}'"
          - "set nat destination rule {{ (rule_number + 1) * 10 }} translation port '{{ item.translation_port | default(item.port) }}'"
        save: true
      loop:
        - description: traefik
          port: 443
          protocol: tcp
          translation_address: 10.11.1.64
          translation_port: 8443
        - description: unifi-inform
          port: 8080
          protocol: tcp
          translation_address: 10.11.1.65
        - description: unifi-stun
          port: 3478
          protocol: udp
          translation_address: 10.11.1.65
        - description: valheim-forerunner
          port: 2456
          protocol: udp
          translation_address: 10.11.1.67
        - description: valheim-forerunner
          port: 2457
          protocol: udp
          translation_address: 10.11.1.67
        - description: valheim-forerunner
          port: 2458
          protocol: udp
          translation_address: 10.11.1.67
        - description: valheim-relic
          port: 2459
          protocol: udp
          translation_address: 10.11.1.68
          translation_port: 2456
        - description: valheim-relic
          port: 2460
          protocol: udp
          translation_address: 10.11.1.68
          translation_port: 2457
        - description: valheim-relic
          port: 2461
          protocol: udp
          translation_address: 10.11.1.68
          translation_port: 2458
        - description: factorio-relic
          port: 34197
          protocol: udp
          translation_address: 10.11.1.69
        - description: lg-git-ssh
          port: 2222
          protocol: tcp
          translation_address: 10.11.1.70
      loop_control:
        index_var: rule_number
      tags:
        - nat

#
# vyos_wan
#

- hosts: vyos_wan
  gather_facts: false
  tasks:
    - name: Setup default route
      vyos.vyos.vyos_config:
        lines:
          - "set protocols static route 0.0.0.0/0 interface '{{ vyos_wan__outbound_interface }}'"
        save: true
      tags:
        - routing

    - name: Setup NAT masquerade rules
      vyos.vyos.vyos_config:
        lines:
          - "set nat source rule {{ (rule_number + 1) * 10 }} outbound-interface name '{{ vyos_wan__outbound_interface }}'"
          - "set nat source rule {{ (rule_number + 1) * 10 }} source address '{{ item }}'"
          - "set nat source rule {{ (rule_number + 1) * 10 }} translation address masquerade"
        save: true
      loop:
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
      loop_control:
        index_var: rule_number
      tags:
        - nat
