---
- name: Mount the filesystem as rw
  hosts: pikvm
  gather_facts: no
  tasks:
    - name: Mount the filesystem as rw
      ansible.builtin.raw: rw
- name: Gather Facts
  hosts: all
  gather_facts: yes
- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Add hosts to ansible_distribution group
      ansible.builtin.add_host:
        name: "{{ item }}"
        group: "{{ hostvars[item]['ansible_facts']['distribution'] }}"
      loop: "{{ hostvars | dict2items | map(attribute='key') }}"
      when: item != 'localhost' and 'distribution' in hostvars[item]['ansible_facts']
      changed_when: no

#
# ansible_disbribution-Specific Update Logic
#

- hosts: Archlinux # ansible_disbrution == Archlinux
  gather_facts: no
  order: sorted
  tasks:
    - name: Update packages with pacman
      community.general.pacman:
        update_cache: yes
        upgrade: yes
      register: pacman
    - name: Reboot iff required
      ansible.builtin.reboot:
      become: yes
      when: pacman.changed
    - name: Mount the filesystem as ro
      ansible.builtin.raw: ro

- hosts: Ubuntu # ansible_disbrution == Ubuntu
  gather_facts: no
  order: "sorted"
  tasks:
    - name: "Update packages with apt"
      ansible.builtin.apt:
        autoclean: yes
        autoremove: yes
        name: "*"
        state: "latest"
        update_cache: yes
      async: 900 # 15 minutes, mostly becuase a Pi 2 is slow.
      become: yes
      poll: 5
    - name: "Determine if a reboot is required"
      ansible.builtin.stat:
        path: "/var/run/reboot-required"
      register: reboot_required
    - name: "Reboot iff required"
      ansible.builtin.reboot:
      become: yes
      when: reboot_required.stat.exists
