#cloud-config

hostname: {{ hostvars[host].inventory_hostname }}

users:
  - name: kairos
    ssh_authorized_keys:
{% for item in common__keys %}
      - {{ item.type }} {{ item.key }}
{% endfor %}

{% if hostvars[host].k3s_controlplane %}
k3s:
  args:
    - --node-ip={{ hostvars[host].common__ip_addresses | ansible.utils.ipaddr('10.11.0.0/23') | ansible.utils.ipaddr('address') | first }}
    - --node-name={{ hostvars[host].inventory_hostname_short }}
{% if hostvars[host].k3s_cluster_init | default(False) %}
    - --cluster-init
{% else %}
    - --server https://{{ hostvars[groups[hostvars[host].k3s_controlplane_group] | first].inventory_hostname }}:6443
{% endif %}
    - --flannel-backend=none
    - --disable-network-policy
    - --cluster-cidr=172.16.0.0/16
    - --service-cidr=172.17.0.0/16
    - --disable=traefik,servicelb
    - --disable-kube-proxy
{% for tls_san in hostvars[host].k3s_controlplane_san %}
    - --tls-san={{ tls_san }}
{% endfor %}
{% else %}
k3s-agent:
  args:
    - --flannel-iface=services
    - --node-ip={{ hostvars[host].common__ip_addresses | ansible.utils.ipaddr('10.11.0.0/23') | ansible.utils.ipaddr('address') | first }}
    - --node-name={{ hostvars[host].inventory_hostname_short }}
{% endif %}
  enabled: true
  env:
    K3S_TOKEN: "{{ hostvars[host].k3s_token }}"
{% if not hostvars[host].k3s_controlplane %}
    K3S_URL: https://{{ hostvars[groups[hostvars[host].k3s_controlplane_group] | first].inventory_hostname }}:6443
{% endif %}

stages:
  initramfs:
    - name: Set inotify max values
      sysctl:
        fs.inotify.max_user_instances: "8192"
        fs.inotify.max_user_watches: "524288"
    - name: Setup NTP
      systemctl:
        enable:
          - systemd-timesyncd
      timesyncd:
        NTP: {{ common__ntp_pool }}
        FallbackNTP: ""
    - files:
{% if "common__interfaces" in hostvars[host] and "bonds" in hostvars[host].common__interfaces %}
{% for bond in hostvars[host].common__interfaces.bonds %}
        - path: /etc/systemd/network/01-{{ bond.name }}.netdev
          permissions: 0644
          content: |
            [NetDev]
            Name={{ bond.name }}
            Kind=bond
            [Bond]
            Mode={{ bond.mode }}
            PrimaryReselectPolicy=always
            MIIMonitorSec=1s
        - path: /etc/systemd/network/01-{{ bond.name }}.network
          permissions: 0644
          content: |
            [Match]
            Name={{ bond.name }}
            [Network]
            Bridge={{ bond.bridge_name }}
{% for slave in bond.slaves %}
        - path: /etc/systemd/network/05-slave-{{ slave.mac | replace(':', '-') }}-{{ bond.name }}.network
          permissions: 0644
          content: |
            [Match]
            PermanentMACAddress={{ slave.mac }}
            [Network]
            Bond={{ bond.name }}
{% if slave.primary | default(false) %}
            PrimarySlave=true
{% endif %}
{% endfor %}
        - path: /etc/systemd/network/02-{{ bond.bridge_name }}.netdev
          permissions: 0644
          content: |
            [NetDev]
            Name={{ bond.bridge_name }}
            Kind=bridge
{% endfor %}
{% else %}
        - path: /etc/systemd/network/01-en.network
          permissions: 0644
          content: |
            [Match]
            Name=en*
            [Network]
            Bridge=uplink
        - path: /etc/systemd/network/02-uplink.netdev
          permissions: 0644
          content: |
            [NetDev]
            Name=uplink
            Kind=bridge
            MACAddress={{ (hostvars[host].common__interfaces.interfaces | first).mac }}
{% endif %}
        - path: /etc/systemd/network/10-uplink.network
          permissions: 0644
          content: |
            [Match]
            Name=uplink
            [Network]
            Address={{ hostvars[host].common__ip_addresses | first }}
            DNS={{ hostvars[host].common__nameservers.addresses | join(' ') }}
            Gateway={{ hostvars[host].common__gateway_v4_address }}
