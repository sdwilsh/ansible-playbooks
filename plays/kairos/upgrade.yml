---
- hosts: kairos
  gather_facts: false
  order: sorted
  tasks:
    - name: Ensure configuration is up-to-date
      ansible.builtin.template:
        dest: /oem/90_custom.yaml
        src: templates/config.yml.j2
      become: yes
      register: config
      vars:
        host: "{{ inventory_hostname }}"
    - name: Read in current version
      ansible.builtin.slurp:
        src: /etc/os-release
      register: osreleasefile
    - name: Extract current version
      ansible.builtin.set_fact:
        os_release: "{{ osreleasefile['content'] | b64decode | regex_findall('^KAIROS_VERSION_ID=\"(.*)\"$', multiline=True) | last }}"
    - name: Print os version
      ansible.builtin.debug:
        var: os_release
    - name: Install update
      ansible.builtin.command:
        argv:
          - kairos-agent
          - upgrade
          # v1.6.1-k3sv1.26.1+k3s1 => v1.6.1-k3sv1.26.1-k3s1
          - "{{ kairos_version | replace('+', '-') }}"
      become: yes
      when: os_release != kairos_version
    - name: Drain and Reboot
      block:
        # TODO(sdwilsh): This does not work today because we need to be able to select specific pods.  See
        #                https://github.com/ansible-collections/kubernetes.core/issues/474
        # - name: Drain
        #   kubernetes.core.k8s_drain:
        #     delete_options:
        #       delete_emptydir_data: yes
        #       force: yes
        #       ignore_daemonsets: yes
        #     name: "{{ inventory_hostname_short }}"
        #     state: drain
        #   delegate_to: localhost
        - name: Drain
          ansible.builtin.shell:
            cmd: "kubectl drain {{ inventory_hostname_short }} --ignore-daemonsets --delete-emptydir-data --force --pod-selector='app!=csi-attacher,app!=csi-provisioner' --kubeconfig ~/.kube/config"
          delegate_to: localhost
        - name: Reboot
          ansible.builtin.reboot:
            pre_reboot_delay: 60 # seconds
            connect_timeout: 240 # seconds
            test_command: "{{ reboot_test_command }}"
          become: yes
        - name: Uncordon
          kubernetes.core.k8s_drain:
            name: "{{ inventory_hostname_short }}"
            state: uncordon
          delegate_to: localhost
      # At most, one at a time
      throttle: 1
      when: os_release != kairos_version or config.changed
  vars:
    # renovate: depName=quay.io/kairos/kairos-ubuntu-22-lts
    kairos_version: "v2.0.3-k3sv1.26.4+k3s1"
