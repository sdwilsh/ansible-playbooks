- name: Mount the filesystem as rw
  hosts: pikvm
  gather_facts: no
  tags:
    - always
  tasks:
    - name: Mount the filesystem as rw
      ansible.builtin.raw: rw
      changed_when: no
- name: Configure PiKVM Devices 
  hosts: pikvm
  gather_facts: yes
  tasks:
    - name: Deploy public keys to root user
      ansible.posix.authorized_key:
        user: root
        state: present
        key: "{{ item.type }} {{ item.key }}"
      loop: "{{ common__keys }}"
      loop_control:
        label: "{{ item.description }}"
      tags:
        - ssh
    - name: Configure timesyncd
      ansible.builtin.copy:
        content: |
          [Time]
          NTP=pool.ntp.hogs.tswn.us
        dest: /etc/systemd/timesyncd.conf
        mode: u=r,g=r,o=r
        owner: root
        group: root
      tags:
        - ntp
        - timesyncd
    - name: Set timezone to US/Pacific
      community.general.timezone:
        name: US/Pacific
      tags:
        - timedatectl
    - name: Disable ATX support
      ansible.builtin.copy:
        content: "{{ override | to_nice_yaml(indent=4, explicit_start=True) }}"
        dest: /etc/kvmd/override.d/disable-atx.yaml
        mode: u=r,g=r,o=r
        owner: root
        group: root
      vars:
        override:
          kvmd:
            atx:
              type: disabled
      tags:
        - atx
    - name: Set hostname
      ansible.builtin.hostname:
        name: "{{ inventory_hostname_short }}"
      tags:
        - hostname
    - name: Set UI Hostname
      ansible.builtin.lineinfile:
        backrefs: yes
        line: "\\1{{ inventory_hostname }}"
        path: /etc/kvmd/meta.yaml
        regexp: r"^(\s+host:\s+).*"gm
        state: present
      tags:
        - hostname
    - name: Configure Networking
      ansible.builtin.copy:
        content: |
          [Match]
          Name=eth0

          [Network]
          DNSSEC=no
          Address={{ common__ip_addresses | first }}
          Gateway={{ common__gateway_v4_address }}
          DNS={{ common__nameservers.addresses | ansible.utils.ipv4 | first }}
        dest: /etc/systemd/network/eth0.network
        mode: u=r,g=r,o=r
        owner: root
        group: root
      tags:
        - networking
    - name: Configure KVM Switch
      ansible.builtin.copy:
        content: "{{ override | to_nice_yaml(indent=4, explicit_start=True) }}"
        dest: /etc/kvmd/override.d/kvm-switch.yaml
        mode: u=r,g=r,o=r
        owner: root
        group: root
      vars:
        override:
          kvmd:
            gpio:
              drivers:
                ez:
                  type: ezcoo
                  protocol: 2
                  device: /dev/ttyUSB0
              scheme:
                ch0_led:
                  driver: ez
                  pin: 0
                  mode: input
                ch1_led:
                  driver: ez
                  pin: 1
                  mode: input
                ch2_led:
                  driver: ez
                  pin: 2
                  mode: input
                ch3_led:
                  driver: ez
                  pin: 3
                  mode: input
                ch0_button:
                  driver: ez
                  pin: 0
                  mode: output
                  switch: false
                ch1_button:
                  driver: ez
                  pin: 1
                  mode: output
                  switch: false
                ch2_button:
                  driver: ez
                  pin: 2
                  mode: output
                  switch: false
                ch3_button:
                  driver: ez
                  pin: 3
                  mode: output
                  switch: false
              view:
                table: "{{ pikvm__hosts }}"
      tags:
        - kvm-switch
  post_tasks:
    - name: Mount the filesystem as ro
      ansible.builtin.raw: ro
      changed_when: no
      tags:
        - always
