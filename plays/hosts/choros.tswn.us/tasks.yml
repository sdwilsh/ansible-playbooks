---
- name: Play to setup choros.tswn.us
  become: true
  hosts: choros.tswn.us
  handlers:
    # Note: these run in the order they are defined in (regardless of invocation order)!
    - name: systemctl daemon-reload
      ansible.builtin.systemd_service:
        daemon_reload: true
    - name: firewalld.service
      ansible.builtin.systemd_service:
        name: firewalld.service
        state: restarted
    - name: systemd-journald.service
      ansible.builtin.systemd_service:
        name: systemd-journald.service
        state: restarted
    - name: systemd-modules-load.service
      ansible.builtin.systemd_service:
        name: systemd-modules-load.service
        state: restarted
    - name: systemd-sysctl.service
      ansible.builtin.systemd_service:
        name: systemd-sysctl.service
        state: restarted
    - name: hogs-pod.service
      ansible.builtin.systemd_service:
        name: hogs-pod.service
        state: restarted
      listen:
        - alloy.service
        - hfp-wireguard.service
        - hogs-pod.service
        - hogs-services-network.service
        - wireguard.service
  roles:
    - role: common-users
    - role: devsec.hardening.ssh_hardening
      vars:
        ssh_kerberos_supprt: false
  tasks:
    - name: Set hostname
      ansible.builtin.hostname:
        name: "{{ inventory_hostname }}"
    
    # Disable bootc auto-updates, as it breaks the update script.
    - name: Disable bootc auto-update via rpm-ostreed-automatic.timer
      ansible.builtin.systemd_service:
        name: rpm-ostreed-automatic.timer
        enabled: false

    # Firewalld Setup
    - name: Setup firewalld.conf
      ansible.builtin.copy:
        content: |
          LogDenied=unicast
        dest: /etc/firewalld/firewalld.conf
        mode: u=rw,g=r,o=r
        owner: root
        group: root
      notify:
        - firewalld.service
      tags:
        - firewall
    
    # HOGS Pod & Network Setup
    - name: Setup HOGS services container network
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=A network with a known set of addresses to talk to HOGS services.

          [Network]
          Gateway=10.11.2.1
          IPRange=10.11.2.128/25
          IPv6=false
          Subnet=10.11.2.0/24
        dest: /etc/containers/systemd/hogs-services.network
        mode: u=rw,g=r,o=r
        owner: root
        group: root
      notify:
        - systemctl daemon-reload
        - hogs-services-network.service
      tags:
        - hogs-pod
    - name: Setup HOGS pod for containers
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=A pod that contains a set of containers that need to talk to HOGS.

          [Pod]
          Network=hogs-services.network
          # HFP
          PublishPort={{ ansible_default_ipv4.address }}:51823:51823/udp
          # Traefik Proxy
          PublishPort={{ ansible_default_ipv4.address }}:443:443/tcp
          # Unifi INFORM
          PublishPort={{ ansible_default_ipv4.address }}:8080:8080/tcp
          PublishPort={{ ansible_default_ipv4.address }}:3478:3478/udp
          # Wireguard
          PublishPort={{ ansible_default_ipv4.address }}:51821:51821/udp

          [Install]
          WantedBy=multi-user.target default.target
        dest: /etc/containers/systemd/hogs.pod
        mode: u=rw,g=r,o=r
        owner: root
        group: root
      notify:
        - systemctl daemon-reload
        - hogs-pod.service
      tags:
        - hogs-pod

    # Node Monitoring
    - name: Ensure directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: u=rw,g=r,o=r
        owner: root
        group: root
      loop:
        - /etc/containers/systemd/alloy.container.d
        - /etc/systemd/journald.conf.d
      tags:
        - alloy
        - hogs-pod
    - name: Modify Alloy container to run as part of HOGS pod
      ansible.builtin.copy:
        content: |
          [Container]
          Pod=hogs.pod
          Volume=/etc/alloy/loki.alloy:/etc/alloy/loki.alloy:ro
        dest: /etc/containers/systemd/alloy.container.d/override.conf
        mode: u=rw,g=r,o=r
        owner: root
        group: root
      notify:
        - alloy.service
        - systemctl daemon-reload
      tags:
        - alloy
        - hogs-pod
    - name: Configure Loki target
      ansible.builtin.copy:
        content: |
          loki.write "default" {
            endpoint {
              url = "http://10.11.1.72:3100/loki/api/v1/push"
            }
          }
        dest: /etc/alloy/loki.alloy
        mode: u=rw,g=r,o=r
        owner: root
        group: root
      notify:
        - alloy.service
      tags:
        - alloy
        - hogs-pod
    - name: Install journald.conf for Alloy
      ansible.builtin.copy:
        content: |
          [Journal]
          # Alloy pod will read from journalctl.
          ForwardToSyslog=no

          # Alloy should be ingesting this, but keep a bit extra just in case!
          MaxRetentionSec=7day
        dest: /etc/systemd/journald.conf.d/alloy.conf
        mode: u=rw,g=r,o=r
        owner: root
        group: root
      notify:
        - systemd-journald.service
      tags:
        - alloy

    # Wireguard Forwarding
    - name: Setup sysctl's for router functionality
      ansible.builtin.copy:
        content: |
          net.ipv4.conf.all.forwarding = 1
          net.ipv4.ip_unprivileged_port_start = 0
        dest: /etc/sysctl.d/90-router.conf
        mode: u=rw,g=r,o=r
        owner: root
        group: root
      notify:
        - systemd-sysctl.service
      tags:
        - sysctl
    - name: Setup loading of additional kernel modules needed by Wireguard
      ansible.builtin.copy:
        content: |
          wireguard
          # iptables/nftables modules for basic DNAT/SNAT and masquerading
          nft_chain_nat
          nft_compat
          xt_nat
          # nftables modules for wg-quick default route
          nft_ct
          nft_fib_ine
        dest: /etc/modules-load.d/wireguard.conf
        mode: u=rw,g=r,o=r
        owner: root
        group: root
      notify:
        - systemd-modules-load.service
      tags:
        - modules-load
    - name: Setup Wireguard Config
      ansible.builtin.copy:
        content: |
          [Interface]
          Address = 10.11.2.2/32
          ListenPort = 51821
          MTU = 1280
          PrivateKey = {{ wireguard__privkey }}

          # Traefik Port Forwarding
          PreUp = iptables --table nat --append PREROUTING --protocol tcp --dport 443 --jump DNAT --to-destination 10.11.1.64:8443
          PreUp = iptables --table nat --append POSTROUTING --protocol tcp --destination 10.11.1.64 --dport 8443 --jump MASQUERADE

          # Unifi Inform Forwarding
          PreUp = iptables --table nat --append PREROUTING --protocol tcp --dport 8080 --jump DNAT --to-destination 10.11.1.65:8080
          PreUp = iptables --table nat --append PREROUTING --protocol udp --dport 3478 --jump DNAT --to-destination 10.11.1.65:3478
          PreUp = iptables --table nat --append POSTROUTING --protocol tcp --destination 10.11.1.65 --dport 8080 --jump MASQUERADE
          PreUp = iptables --table nat --append POSTROUTING --protocol udp --destination 10.11.1.65 --dport 3478 --jump MASQUERADE

          [Peer]
          PersistentKeepalive = 25
          PublicKey = EUDwE7E1dmbiJZXBSH0txxs/3B+eACWdfDocMvi5Fno=
          AllowedIPs = {{ allowed_ips | join(', ') }}
        dest: /etc/wireguard/hogs0.conf
        mode: u=rw,g=r
        owner: root
        group: root
      no_log: true # Contains the wireguard private key!
      notify:
        - wireguard.service
      tags:
        - hogs-pod
        - wireguard
      vars:
        allowed_ips:
          - 10.11.2.1/32 # Gateway
          - 10.11.1.1/32 # Jellyfin
          - 10.11.1.64/32 # Traefik
          - 10.11.1.65/32 # Unifi Controller
          - 10.11.1.72/32 # loki-distributor
        wireguard__privkey: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          65363935346361653034666130656437303839336239663564346538333164353732643934373833
          3335373164356164383932666237343563653733643238300a313231616633313130343732373834
          30626165306338323162613264643562623163633334333339366339336662333635393838366564
          3534623832613566300a386266623766386135393636353435353966383463303430653739376562
          37363132376437626438383166376338383339356239636563386638616339333466393962386235
          3361663561313533386664633930326432333730343561306634
    - name: Setup Wireguard container
      ansible.builtin.copy:
        content: |
          [Unit]
          ConditionPathExists=/etc/wireguard/hogs0.conf
          Description=A container that hosts a wireguard VPN server and routes traffic through it.

          [Container]
          AddCapability=NET_ADMIN
          AddCapability=NET_RAW
          DropCapability=ALL
          HealthCmd=CMD-SHELL ping -c 1 10.11.2.1 || exit 1
          HealthInterval=30s
          HealthLogDestination=events_logger
          HealthRetries=3
          HealthStartPeriod=10s
          NoNewPrivileges=true
          Image=docker.io/procustodibus/wireguard
          Pod=hogs.pod
          Volume=/etc/wireguard/hogs0.conf:/etc/wireguard/wg0.conf:Z
        dest: /etc/containers/systemd/wireguard.container
        mode: u=rw,g=r,o=r
        owner: root
        group: root
      notify:
        - systemctl daemon-reload
        - wireguard.service
      tags:
        - hogs-pod
        - wireguard
      
    # HFP
    - name: Setup HFP Wireguard Config
      ansible.builtin.copy:
        content: |
          [Interface]
          Address = 10.11.2.30/32
          ListenPort = 51823
          PrivateKey = {{ wireguard__privkey }}

          {% for hostname in groups['hogsflixplus'] %}
          [Peer]
          PublicKey = {{ hostvars[hostname].wireguard__pubkey }}
          AllowedIPs = {{ hostvars[hostname].wireguard__address | ansible.utils.ipaddr('address') }}/32
          {% endfor %}
        dest: /etc/wireguard/hfp0.conf
        mode: u=rw,g=r
        owner: root
        group: root
      no_log: true # Contains the wireguard private key!
      notify:
        - hfp-wireguard.service
      tags:
        - hogs-pod
        - hfp-wireguard
      vars:
        wireguard__privkey: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          62306262626166313039376234306564333664303061666639333162636566306263386133656130
          3162346632323933343062623136363365363035633131310a613339373135393965333831353430
          62346161346364383335346632363666396263633732346166393866363832303664376136353537
          3762373566633835340a393062626636303061633039336534306365663438613132343165343465
          66333430336439653565653834313739323430613835353330303638643430333630616339633666
          6565343133316431633366346238653862663836656232383463
    - name: Setup HFP Wireguard container
      ansible.builtin.copy:
        content: |
          [Unit]
          ConditionPathExists=/etc/wireguard/hfp0.conf
          Description=A container that hosts a wireguard VPN server and routes traffic through it for peers.

          [Container]
          AddCapability=NET_ADMIN
          AddCapability=NET_RAW
          DropCapability=ALL
          HealthCmd=CMD-SHELL ping -c 1 10.11.1.1 || exit 1
          HealthInterval=60s
          HealthLogDestination=events_logger
          HealthRetries=3
          HealthStartPeriod=10s
          NoNewPrivileges=true
          Image=docker.io/procustodibus/wireguard
          Pod=hogs.pod
          Volume=/etc/wireguard/hfp0.conf:/etc/wireguard/wg1.conf:Z
        dest: /etc/containers/systemd/hfp-wireguard.container
        mode: u=rw,g=r,o=r
        owner: root
        group: root
      notify:
        - systemctl daemon-reload
        - hfp-wireguard.service
      tags:
        - hogs-pod
        - hfp-wireguard
